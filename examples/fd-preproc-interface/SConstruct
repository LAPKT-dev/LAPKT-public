import os

debug = ARGUMENTS.get('debug', 0)

common_env = Environment()


lwaptk_base_dir = '../../'
include_paths = ['../../include', '../../interfaces/agnostic', '../../interfaces/fd-output', '/usr/local/include' ]
lib_paths = [ ]
libs = [ 'boost_program_options']

common_env.Append( CPPPATH = [ os.path.abspath(p) for p in include_paths ] )

if int(debug) == 1 :
	common_env.Append( CCFLAGS = ['-g','-Wall', '-std=c++0x', '-DDEBUG' ] )
else:
	common_env.Append( CCFLAGS = ['-O3','-Wall', '-std=c++0x', '-DNDEBUG'] )

cxx_sources = Glob('*.cxx')
c_sources = Glob('*.c')

Export( 'common_env' )

src_objs = [ common_env.Object(s) for s in cxx_sources ] + [ common_env.Object(s) for s in c_sources ]
generic_objs = SConscript(os.path.join( lwaptk_base_dir,'src/SConscript.aptk'))
agnostic_objs = SConscript(os.path.join( lwaptk_base_dir,'interfaces/agnostic/SConscript.agnostic'))
fd_objs = SConscript(os.path.join( lwaptk_base_dir,'interfaces/fd-output/SConscript.fd'))

common_env.Append( LIBS=libs)
common_env.Append( LIBPATH=[ os.path.abspath(p) for p in lib_paths ] )

common_env.Program( 'fd-preproc-example', src_objs  + generic_objs + agnostic_objs + fd_objs )
