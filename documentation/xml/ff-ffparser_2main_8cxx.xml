<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="ff-ffparser_2main_8cxx" kind="file" language="C++">
    <compoundname>main.cxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes refid="ff__to__aptk_8hxx" local="no">ff_to_aptk.hxx</includes>
    <includes refid="strips__prob_8hxx" local="no">strips_prob.hxx</includes>
    <includes refid="fluent_8hxx" local="no">fluent.hxx</includes>
    <includes refid="action_8hxx" local="no">action.hxx</includes>
    <includes refid="cond__eff_8hxx" local="no">cond_eff.hxx</includes>
    <includes refid="strips__state_8hxx" local="no">strips_state.hxx</includes>
    <includes refid="fwd__search__prob_8hxx" local="no">fwd_search_prob.hxx</includes>
    <includes refid="landmark__graph_8hxx" local="no">landmark_graph.hxx</includes>
    <includes refid="landmark__graph__generator_8hxx" local="no">landmark_graph_generator.hxx</includes>
    <includes refid="h__1_8hxx" local="no">h_1.hxx</includes>
    <includes refid="layered__h__max_8hxx" local="no">layered_h_max.hxx</includes>
    <includes local="no">ff_rp_heuristic.hxx</includes>
    <includes refid="open__list_8hxx" local="no">open_list.hxx</includes>
    <includes refid="ff__ehc_8hxx" local="no">ff_ehc.hxx</includes>
    <includes local="no">ff_gbfs.hxx</includes>
    <includes refid="string__conversions_8hxx" local="no">string_conversions.hxx</includes>
    <includes local="no">boost/program_options.hpp</includes>
    <incdepgraph>
      <node id="43">
        <label>list</label>
      </node>
      <node id="52">
        <label>iomanip</label>
      </node>
      <node id="22">
        <label>functional</label>
      </node>
      <node id="21">
        <label>queue</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="27">
        <label>mutex_set.hxx</label>
        <link refid="mutex__set_8hxx_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>sys/times.h</label>
      </node>
      <node id="33">
        <label>search_prob.hxx</label>
        <link refid="search__prob_8hxx_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>fluent.hxx</label>
        <link refid="fluent_8hxx_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>match_tree.hxx</label>
        <link refid="match__tree_8hxx_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>hash_table.hxx</label>
        <link refid="hash__table_8hxx_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>succ_gen.hxx</label>
        <link refid="succ__gen_8hxx_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx</label>
        <link refid="ff-ffparser_2main_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>watched_lit_succ_gen.hxx</label>
        <link refid="watched__lit__succ__gen_8hxx_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cassert</label>
      </node>
      <node id="46">
        <label>boost/heap/fibonacci_heap.hpp</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="32">
        <label>fwd_search_prob.hxx</label>
        <link refid="fwd__search__prob_8hxx_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>action.hxx</label>
        <link refid="action_8hxx_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="61">
        <label>boost/program_options.hpp</label>
      </node>
      <node id="36">
        <label>landmark_graph_generator.hxx</label>
        <link refid="landmark__graph__generator_8hxx_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>boost/circular_buffer.hpp</label>
      </node>
      <node id="53">
        <label>closed_list.hxx</label>
        <link refid="closed__list_8hxx_source"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cond_eff.hxx</label>
        <link refid="cond__eff_8hxx_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>sys/resource.h</label>
      </node>
      <node id="35">
        <label>heuristic.hxx</label>
        <link refid="heuristic_8hxx_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ff_ehc.hxx</label>
        <link refid="ff__ehc_8hxx_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>jenkins_12bit.hxx</label>
        <link refid="jenkins__12bit_8hxx_source"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ff_to_aptk.hxx</label>
        <link refid="ff__to__aptk_8hxx_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ff_gbfs.hxx</label>
      </node>
      <node id="51">
        <label>unistd.h</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="38">
        <label>h_1.hxx</label>
        <link refid="h__1_8hxx_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>layered_h_max.hxx</label>
        <link refid="layered__h__max_8hxx_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="60">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>bit_array.hxx</label>
        <link refid="bit__array_8hxx_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>landmark_graph.hxx</label>
        <link refid="landmark__graph_8hxx_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>resources_control.hxx</label>
        <link refid="resources__control_8hxx_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>bit_set.hxx</label>
        <link refid="bit__set_8hxx_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>types.hxx</label>
        <link refid="types_8hxx_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iosfwd</label>
      </node>
      <node id="57">
        <label>cstdlib</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="19">
        <label>deque</label>
      </node>
      <node id="54">
        <label>unordered_map</label>
      </node>
      <node id="37">
        <label>reachability.hxx</label>
        <link refid="reachability_8hxx_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ext_math.hxx</label>
        <link refid="ext__math_8hxx_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>open_list.hxx</label>
        <link refid="open__list_8hxx_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ff_rp_heuristic.hxx</label>
      </node>
      <node id="6">
        <label>strips_prob.hxx</label>
        <link refid="strips__prob_8hxx_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>set</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="30">
        <label>strips_state.hxx</label>
        <link refid="strips__state_8hxx_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>string_conversions.hxx</label>
        <link refid="string__conversions_8hxx_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1a36350f7a121f98a1b374cddde3331993" prot="public" static="no">
        <type><ref refid="classaptk_1_1search_1_1FF__GBFS__Node" kindref="compound">aptk::search::FF_GBFS_Node</ref>&lt; <ref refid="classaptk_1_1State" kindref="compound">aptk::State</ref> &gt;</type>
        <definition>typedef aptk::search::FF_GBFS_Node&lt; aptk::State &gt; FF_Search_Node</definition>
        <argsstring></argsstring>
        <name>FF_Search_Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="71" column="35" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1ac2d818c5d1c6534039daf8c24789513c" prot="public" static="no">
        <type><ref refid="classaptk_1_1search_1_1Node__Comparer__HA" kindref="compound">Node_Comparer_HA</ref>&lt; <ref refid="classaptk_1_1search_1_1FF__GBFS__Node" kindref="compound">FF_Search_Node</ref> &gt;</type>
        <definition>typedef Node_Comparer_HA&lt; FF_Search_Node &gt; FF_Tie_Breaking</definition>
        <argsstring></argsstring>
        <name>FF_Tie_Breaking</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="74" column="25" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1aacb96724fa0f56f9bbbd12c43b91281d" prot="public" static="no">
        <type><ref refid="classaptk_1_1search_1_1Open__List" kindref="compound">Open_List</ref>&lt; <ref refid="classaptk_1_1search_1_1Node__Comparer__HA" kindref="compound">FF_Tie_Breaking</ref>, <ref refid="classaptk_1_1search_1_1FF__GBFS__Node" kindref="compound">FF_Search_Node</ref> &gt;</type>
        <definition>typedef Open_List&lt; FF_Tie_Breaking, FF_Search_Node &gt; FF_Open_List</definition>
        <argsstring></argsstring>
        <name>FF_Open_List</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="77" column="18" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1a84f7592c0dd1a46f42b4dec3f3b13c7a" prot="public" static="no">
        <type><ref refid="classaptk_1_1agnostic_1_1Landmarks__Graph__Generator" kindref="compound">Landmarks_Graph_Generator</ref>&lt; <ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref> &gt;</type>
        <definition>typedef Landmarks_Graph_Generator&lt;Fwd_Search_Problem&gt; Gen_Lms_Fwd</definition>
        <argsstring></argsstring>
        <name>Gen_Lms_Fwd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="80" column="47" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1a628600b296a42c0d3627843885b653dc" prot="public" static="no">
        <type><ref refid="classaptk_1_1agnostic_1_1Layered__H__Max" kindref="compound">Layered_H_Max</ref>&lt; <ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref> &gt;</type>
        <definition>typedef Layered_H_Max&lt; Fwd_Search_Problem &gt; Alt_H_Max</definition>
        <argsstring></argsstring>
        <name>Alt_H_Max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="87" column="22" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1a5a596336b469b124cc65906fb2370813" prot="public" static="no">
        <type><ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" kindref="compound">FF_Relaxed_Plan_Heuristic</ref>&lt; <ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref>, <ref refid="classaptk_1_1agnostic_1_1Layered__H__Max" kindref="compound">Alt_H_Max</ref>, unsigned &gt;</type>
        <definition>typedef FF_Relaxed_Plan_Heuristic&lt; Fwd_Search_Problem, Alt_H_Max, unsigned &gt; Classic_FF_H_Max</definition>
        <argsstring></argsstring>
        <name>Classic_FF_H_Max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="88" column="34" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1a710f8d315e336aa1c9bbb79586229e8a" prot="public" static="no">
        <type><ref refid="classaptk_1_1search_1_1FF__GBFS" kindref="compound">FF_GBFS</ref>&lt; <ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref>, <ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" kindref="compound">Classic_FF_H_Max</ref>, <ref refid="classaptk_1_1search_1_1Open__List" kindref="compound">FF_Open_List</ref> &gt;</type>
        <definition>typedef FF_GBFS&lt; Fwd_Search_Problem, Classic_FF_H_Max, FF_Open_List &gt; Classic_FF_GBFS</definition>
        <argsstring></argsstring>
        <name>Classic_FF_GBFS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="96" column="16" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ff-ffparser_2main_8cxx_1a087abddb9826150a835986cc4d8afcbe" prot="public" static="no">
        <type><ref refid="classaptk_1_1search_1_1FF__EHC" kindref="compound">FF_EHC</ref>&lt; <ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref>, <ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" kindref="compound">Classic_FF_H_Max</ref> &gt;</type>
        <definition>typedef FF_EHC&lt; Fwd_Search_Problem, Classic_FF_H_Max &gt; Classic_FF_EHC</definition>
        <argsstring></argsstring>
        <name>Classic_FF_EHC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="97" column="15" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ff-ffparser_2main_8cxx_1a86fba7b4d9d96e04bef1526da2b885d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void do_search</definition>
        <argsstring>(Fwd_Search_Problem &amp;search_prob, std::ofstream &amp;plan_stream)</argsstring>
        <name>do_search</name>
        <param>
          <type><ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref> &amp;</type>
          <declname>search_prob</declname>
        </param>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>plan_stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="100" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="100" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="ff-ffparser_2main_8cxx_1a7a3c155521f22e294f3a071859403bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void process_command_line_options</definition>
        <argsstring>(int ac, char **av, po::variables_map &amp;vars)</argsstring>
        <name>process_command_line_options</name>
        <param>
          <type>int</type>
          <declname>ac</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>av</declname>
        </param>
        <param>
          <type>po::variables_map &amp;</type>
          <declname>vars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="185" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="185" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="ff-ffparser_2main_8cxx_1aac39cae05bbd5b4c95bdb321013b1676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void report_no_solution</definition>
        <argsstring>(std::string reason, std::ofstream &amp;plan_stream)</argsstring>
        <name>report_no_solution</name>
        <param>
          <type>std::string</type>
          <declname>reason</declname>
        </param>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>plan_stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="215" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="ff-ffparser_2main_8cxx_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" line="221" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx" bodystart="221" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Lightweight<sp/>Automated<sp/>Planning<sp/>Toolkit</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(C)<sp/>2012</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Miquel<sp/>Ramirez<sp/>&lt;miquel.ramirez@rmit.edu.au&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Nir<sp/>Lipovetzky<sp/>&lt;nirlipo@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="10"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment">along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ff_to_aptk.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strips_prob.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fluent.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;action.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cond_eff.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strips_state.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fwd_search_prob.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;landmark_graph.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;landmark_graph_generator.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;h_1.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;layered_h_max.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ff_rp_heuristic.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;open_list.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ff_ehc.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ff_gbfs.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_conversions.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/program_options.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">po<sp/>=<sp/>boost::program_options;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1STRIPS__Problem" kindref="compound">aptk::STRIPS_Problem</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">aptk::agnostic::Fwd_Search_Problem</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1Action" kindref="compound">aptk::Action</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Landmarks__Graph" kindref="compound">aptk::agnostic::Landmarks_Graph</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Landmarks__Graph__Generator" kindref="compound">aptk::agnostic::Landmarks_Graph_Generator</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1H1__Heuristic" kindref="compound">aptk::agnostic::H1_Heuristic</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Layered__H__Max" kindref="compound">aptk::agnostic::Layered_H_Max</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1H__Add__Evaluation__Function" kindref="compound">aptk::agnostic::H_Add_Evaluation_Function</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1H__Max__Evaluation__Function" kindref="compound">aptk::agnostic::H_Max_Evaluation_Function</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" kindref="compound">aptk::agnostic::FF_Relaxed_Plan_Heuristic</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1Open__List" kindref="compound">aptk::search::Open_List</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1Node__Comparer__HA" kindref="compound">aptk::search::Node_Comparer_HA</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1FF__GBFS" kindref="compound">aptk::search::FF_GBFS</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1FF__EHC" kindref="compound">aptk::search::FF_EHC</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MRJ:<sp/>Search<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1search_1_1FF__GBFS__Node" kindref="compound">aptk::search::FF_GBFS_Node&lt; aptk::State &gt;</ref><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1FF__GBFS__Node" kindref="compound">FF_Search_Node</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MRJ:<sp/>Tie<sp/>breaking<sp/>and<sp/>best-node<sp/>selection<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1search_1_1Node__Comparer__HA" kindref="compound">Node_Comparer_HA&lt; FF_Search_Node &gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1Node__Comparer__HA" kindref="compound">FF_Tie_Breaking</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MRJ:<sp/>Open<sp/>List</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1search_1_1Open__List" kindref="compound">Open_List&lt; FF_Tie_Breaking, FF_Search_Node &gt;</ref><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1Open__List" kindref="compound">FF_Open_List</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MRJ:<sp/>Goal<sp/>ordering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Landmarks__Graph__Generator" kindref="compound">Landmarks_Graph_Generator&lt;Fwd_Search_Problem&gt;</ref><sp/><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Landmarks__Graph__Generator" kindref="compound">Gen_Lms_Fwd</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MRJ:<sp/>Heuristics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>H1_CL_Heuristic&lt;<sp/>Fwd_Search_Problem,<sp/>H_Add_Evaluation_Function<sp/>&gt;<sp/><sp/>H_Add_Fwd_2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>H1_CL_Heuristic&lt;<sp/>Fwd_Search_Problem,<sp/>H_Max_Evaluation_Function<sp/>&gt;<sp/><sp/>H_Max_Fwd_2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>FF_Relaxed_Plan_Heuristic&lt;<sp/>Fwd_Search_Problem,<sp/>H_Add_Fwd_2<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/>FF_H_Add_Rp_Fwd_2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>FF_Relaxed_Plan_Heuristic&lt;<sp/>Fwd_Search_Problem,<sp/>H_Max_Fwd_2<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/>FF_H_Max_Rp_Fwd_2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1agnostic_1_1Layered__H__Max" kindref="compound">Layered_H_Max&lt; Fwd_Search_Problem &gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Layered__H__Max" kindref="compound">Alt_H_Max</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" kindref="compound">FF_Relaxed_Plan_Heuristic&lt; Fwd_Search_Problem, Alt_H_Max, unsigned &gt;</ref><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" kindref="compound">Classic_FF_H_Max</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MRJ:<sp/>Search<sp/>engines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>FF_GBFS&lt;<sp/>Fwd_Search_Problem,<sp/>FF_H_Add_Rp_Fwd_2,<sp/>FF_Open_List<sp/>&gt;<sp/><sp/><sp/><sp/>FF_GBFS_H_Add;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>FF_GBFS&lt;<sp/>Fwd_Search_Problem,<sp/>FF_H_Max_Rp_Fwd_2,<sp/>FF_Open_List<sp/>&gt;<sp/><sp/><sp/><sp/>FF_GBFS_H_Max;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>FF_EHC&lt;<sp/>Fwd_Search_Problem,<sp/>FF_H_Add_Rp_Fwd_2<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FF_EHC_H_Add;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>FF_EHC&lt;<sp/>Fwd_Search_Problem,<sp/>FF_H_Max_Rp_Fwd_2<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FF_EHC_H_Max;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1search_1_1FF__GBFS" kindref="compound">FF_GBFS&lt; Fwd_Search_Problem, Classic_FF_H_Max, FF_Open_List &gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1FF__GBFS" kindref="compound">Classic_FF_GBFS</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1search_1_1FF__EHC" kindref="compound">FF_EHC&lt; Fwd_Search_Problem, Classic_FF_H_Max &gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1FF__EHC" kindref="compound">Classic_FF_EHC</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_search(<sp/><ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref>&amp;<sp/>search_prob,<sp/>std::ofstream&amp;<sp/>plan_stream<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details(<sp/></highlight><highlight class="stringliteral">&quot;execution.details&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>aptk::Action_Idx<sp/>&gt;<sp/>plan;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>aptk::time_used();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gbfs_t;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_time;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>search<sp/>with<sp/>EHC...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1FF__EHC" kindref="compound">Classic_FF_EHC</ref><sp/>ehc_engine(<sp/>search_prob<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ehc_engine.start();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ref<sp/>=<sp/>aptk::time_used();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>solved<sp/>=<sp/>ehc_engine.find_solution(<sp/>cost,<sp/>plan<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ehc_t<sp/>=<sp/>aptk::time_used()<sp/>-<sp/>ref;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tEHC<sp/>search<sp/>completed<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ehc_t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>secs&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1search_1_1FF__GBFS" kindref="compound">Classic_FF_GBFS</ref><sp/><sp/><sp/><sp/><sp/>bfs_engine(<sp/>search_prob<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!solved<sp/>){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tEHC<sp/>FAILED!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>search<sp/>with<sp/>GBFS...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfs_engine.start();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref<sp/>=<sp/>aptk::time_used();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solved<sp/>=<sp/>bfs_engine.find_solution(<sp/>cost,<sp/>plan<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gbfs_t<sp/>=<sp/>aptk::time_used()<sp/>-<sp/>ref;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tGBFS<sp/>search<sp/>completed<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>gbfs_t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>secs&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(solved){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Plan<sp/>found<sp/>with<sp/>cost:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cost<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>plan.size();<sp/>k++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/>k+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classaptk_1_1Action" kindref="compound">aptk::Action</ref>&amp;<sp/>a<sp/>=<sp/>*(search_prob.task().actions()[<sp/>plan[k]<sp/>]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/>a.signature();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan_stream<sp/>&lt;&lt;<sp/>a.signature()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tf<sp/>=<sp/>aptk::time_used();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_time<sp/>=<sp/>tf<sp/>-<sp/>t0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>total_time<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Generated:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ehc_engine.generated()<sp/>+<sp/>bfs_engine.generated()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expanded:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ehc_engine.expanded()<sp/>+<sp/>bfs_engine.expanded()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tGenerated<sp/>EHC:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ehc_engine.generated()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tExpanded<sp/>EHC:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ehc_engine.expanded()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tGenerated<sp/>GBFS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bfs_engine.generated()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tExpanded<sp/>GBFS:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bfs_engine.expanded()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan.clear();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tSOLVED!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>total_time<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Nodes<sp/>generated<sp/>during<sp/>search:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ehc_engine.generated()<sp/>+<sp/>bfs_engine.generated()&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Nodes<sp/>expanded<sp/>during<sp/>search:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>ehc_engine.expanded()<sp/>+<sp/>bfs_engine.expanded()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tNodes<sp/>generated<sp/>during<sp/>EHC<sp/>search:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ehc_engine.generated()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tNodes<sp/>expanded<sp/>during<sp/>EHC<sp/>search:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>ehc_engine.expanded()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tNodes<sp/>generated<sp/>during<sp/>GBFS<sp/>search:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bfs_engine.generated()&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tNodes<sp/>expanded<sp/>during<sp/>GBFS<sp/>search:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>bfs_engine.expanded()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Plan<sp/>found<sp/>with<sp/>cost:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cost<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;;<sp/>UNSOLVABLE<sp/>;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;;<sp/>UNSOLVABLE<sp/>;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>details.close();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>plan_stream.close();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_command_line_options(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ac,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>av,<sp/>po::variables_map&amp;<sp/>vars<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>po::options_description<sp/>desc(<sp/></highlight><highlight class="stringliteral">&quot;Options:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>desc.add_options()</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>help<sp/>message&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;domain&quot;</highlight><highlight class="normal">,<sp/>po::value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>PDDL<sp/>domain<sp/>description&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;problem&quot;</highlight><highlight class="normal">,<sp/>po::value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>PDDL<sp/>problem<sp/>description&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">,<sp/>po::value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>file<sp/>for<sp/>plan&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>po::store(<sp/>po::parse_command_line(<sp/>ac,<sp/>av,<sp/>desc<sp/>),<sp/>vars<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>po::notify(<sp/>vars<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>e<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::exit(1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>...<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exception<sp/>of<sp/>unknown<sp/>type!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::exit(1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vars.count(</highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>desc<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::exit(0);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>report_no_solution(<sp/>std::string<sp/>reason,<sp/>std::ofstream&amp;<sp/>plan_stream<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>plan_stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;;<sp/>No<sp/>solution<sp/>found&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>plan_stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reason<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>plan_stream.close();</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>po::variables_map<sp/>vm;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>process_command_line_options(<sp/>argc,<sp/>argv,<sp/>vm<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!vm.count(<sp/></highlight><highlight class="stringliteral">&quot;domain&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>PDDL<sp/>domain<sp/>was<sp/>specified!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::exit(1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!vm.count(<sp/></highlight><highlight class="stringliteral">&quot;problem&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>PDDL<sp/>problem<sp/>was<sp/>specified!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::exit(1);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/><sp/><sp/>plan_stream;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!vm.count(<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>output<sp/>plan<sp/>file<sp/>specified,<sp/>defaulting<sp/>to<sp/>&apos;plan.ipc&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan_stream.open(<sp/></highlight><highlight class="stringliteral">&quot;plan.ipc&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plan_stream.open(<sp/>vm[</highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;()<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1STRIPS__Problem" kindref="compound">STRIPS_Problem</ref><sp/><sp/>prob;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_costs<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>aptk::FF_Parser::get_problem_description(<sp/>vm[</highlight><highlight class="stringliteral">&quot;domain&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;(),<sp/>vm[</highlight><highlight class="stringliteral">&quot;problem&quot;</highlight><highlight class="normal">].as&lt;std::string&gt;(),<sp/>prob,<sp/>ignore_costs<sp/><sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PDDL<sp/>problem<sp/>description<sp/>loaded:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tDomain:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prob.domain_name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tProblem:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prob.problem_name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t#Actions:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prob.num_actions()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t#Fluents:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>prob.num_fluents()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classaptk_1_1agnostic_1_1Fwd__Search__Problem" kindref="compound">Fwd_Search_Problem</ref><sp/><sp/>search_prob(<sp/>&amp;prob<sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gen_Lms_Fwd<sp/><sp/><sp/><sp/>gen_lms(<sp/>search_prob<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Landmarks_Graph<sp/>graph(<sp/>prob<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//gen_lms.set_only_goals(<sp/>true<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gen_lms.compute_lm_graph_set_additive(<sp/>graph<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Landmarks<sp/>found:<sp/>&quot;<sp/>&lt;&lt;<sp/>graph.num_landmarks()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//graph.print(<sp/>std::cout<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>do_search(<sp/>search_prob,<sp/>plan_stream<sp/>);<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/ff-ffparser/main.cxx"/>
  </compounddef>
</doxygen>
