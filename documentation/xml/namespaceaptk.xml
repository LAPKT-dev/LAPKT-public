<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="namespaceaptk" kind="namespace" language="C++">
    <compoundname>aptk</compoundname>
    <innerclass refid="classaptk_1_1Action" prot="public">aptk::Action</innerclass>
    <innerclass refid="classaptk_1_1Bit__Array" prot="public">aptk::Bit_Array</innerclass>
    <innerclass refid="classaptk_1_1Bit__Matrix" prot="public">aptk::Bit_Matrix</innerclass>
    <innerclass refid="classaptk_1_1Bit__Set" prot="public">aptk::Bit_Set</innerclass>
    <innerclass refid="classaptk_1_1Bit__Square__Matrix" prot="public">aptk::Bit_Square_Matrix</innerclass>
    <innerclass refid="classaptk_1_1Conditional__Effect" prot="public">aptk::Conditional_Effect</innerclass>
    <innerclass refid="classaptk_1_1Fluent" prot="public">aptk::Fluent</innerclass>
    <innerclass refid="classaptk_1_1Hash__Key" prot="public">aptk::Hash_Key</innerclass>
    <innerclass refid="classaptk_1_1Hash__Table" prot="public">aptk::Hash_Table</innerclass>
    <innerclass refid="classaptk_1_1Heuristic" prot="public">aptk::Heuristic</innerclass>
    <innerclass refid="classaptk_1_1Pair__Value__Table" prot="public">aptk::Pair_Value_Table</innerclass>
    <innerclass refid="classaptk_1_1Search__Problem" prot="public">aptk::Search_Problem</innerclass>
    <innerclass refid="classaptk_1_1Sliding__Window" prot="public">aptk::Sliding_Window</innerclass>
    <innerclass refid="classaptk_1_1State" prot="public">aptk::State</innerclass>
    <innerclass refid="classaptk_1_1STRIPS__Problem" prot="public">aptk::STRIPS_Problem</innerclass>
    <innerclass refid="classaptk_1_1WatchedLitSuccGen" prot="public">aptk::WatchedLitSuccGen</innerclass>
    <innernamespace refid="namespaceaptk_1_1agnostic">aptk::agnostic</innernamespace>
    <innernamespace refid="namespaceaptk_1_1FF__Parser">aptk::FF_Parser</innernamespace>
    <innernamespace refid="namespaceaptk_1_1search">aptk::search</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="search__prob_8hxx_1aab7151b83402ac2604c714142db814ee" prot="public" static="no">
        <type>int</type>
        <definition>typedef int aptk::Action_Idx</definition>
        <argsstring></argsstring>
        <name>Action_Idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/search_prob.hxx" line="32" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/search_prob.hxx" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a26cd34bfaaaccfc3b06b20d873fa61ca" prot="public" static="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>typedef std::vector&lt;bool&gt; aptk::Bool_Vec</definition>
        <argsstring></argsstring>
        <name>Bool_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="38" column="19" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a1e0296d09cb834b93d090d0b8e492196" prot="public" static="no">
        <type>std::vector&lt; bool * &gt;</type>
        <definition>typedef std::vector&lt;bool*&gt; aptk::Bool_Vec_Ptr</definition>
        <argsstring></argsstring>
        <name>Bool_Vec_Ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="39" column="19" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a9f7a36acc9882421873b99b80a18ded7" prot="public" static="no">
        <type>std::vector&lt; unsigned &gt;</type>
        <definition>typedef std::vector&lt;unsigned&gt; aptk::Fluent_Vec</definition>
        <argsstring></argsstring>
        <name>Fluent_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="40" column="19" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1aec6626a09ec1387ce30b61c4865051ae" prot="public" static="no">
        <type>std::vector&lt; unsigned &gt;</type>
        <definition>typedef std::vector&lt;unsigned&gt; aptk::Index_Vec</definition>
        <argsstring></argsstring>
        <name>Index_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="41" column="19" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1ac61e2d54057a27d683624d3e115b628e" prot="public" static="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>typedef std::vector&lt;float&gt; aptk::Value_Vec</definition>
        <argsstring></argsstring>
        <name>Value_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="42" column="19" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a3b2c540c3ec1cc9352a0112efb5c4edc" prot="public" static="no">
        <type>std::pair&lt; unsigned, unsigned &gt;</type>
        <definition>typedef std::pair&lt;unsigned, unsigned&gt; aptk::Fluent_Pair</definition>
        <argsstring></argsstring>
        <name>Fluent_Pair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="43" column="17" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a460bb0bc23f5e2f71114819ac210722f" prot="public" static="no">
        <type><ref refid="classaptk_1_1Bit__Set" kindref="compound">Bit_Set</ref></type>
        <definition>typedef Bit_Set aptk::Fluent_Set</definition>
        <argsstring></argsstring>
        <name>Fluent_Set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="44" column="15" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a045f84466622b3d7f62f27ab99a49aca" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classaptk_1_1Action" kindref="compound">Action</ref> * &gt;</type>
        <definition>typedef std::vector&lt;Action* &gt; aptk::Action_Ptr_Vec</definition>
        <argsstring></argsstring>
        <name>Action_Ptr_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="45" column="20" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a1b71bef7b73de35b3d1c24f51b07dfb7" prot="public" static="no">
        <type>std::vector&lt; const <ref refid="classaptk_1_1Action" kindref="compound">Action</ref> * &gt;</type>
        <definition>typedef std::vector&lt; const Action* &gt; aptk::Action_Ptr_Const_Vec</definition>
        <argsstring></argsstring>
        <name>Action_Ptr_Const_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="46" column="20" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a76676f63b941d8aa5e2b9f41978eef44" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classaptk_1_1Fluent" kindref="compound">Fluent</ref> * &gt;</type>
        <definition>typedef std::vector&lt;Fluent* &gt; aptk::Fluent_Ptr_Vec</definition>
        <argsstring></argsstring>
        <name>Fluent_Ptr_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="47" column="20" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a1c3dbb5c0399d6b99cd56b68a7c17592" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classaptk_1_1Conditional__Effect" kindref="compound">Conditional_Effect</ref> * &gt;</type>
        <definition>typedef std::vector&lt;Conditional_Effect* &gt; aptk::Conditional_Effect_Vec</definition>
        <argsstring></argsstring>
        <name>Conditional_Effect_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="48" column="20" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1ad942946059a8976bb931d0423e68aca9" prot="public" static="no">
        <type>std::vector&lt; std::vector&lt; const <ref refid="classaptk_1_1Action" kindref="compound">Action</ref> * &gt; &gt;</type>
        <definition>typedef std::vector&lt; std::vector&lt; const Action* &gt; &gt; aptk::Fluent_Action_Table</definition>
        <argsstring></argsstring>
        <name>Fluent_Action_Table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="49" column="19" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1aa6ccf46ffa82d7d63306b2135383a1fe" prot="public" static="no">
        <type>std::vector&lt; Action_Ptr_Vec &gt;</type>
        <definition>typedef std::vector&lt; Action_Ptr_Vec &gt; aptk::PDDLop_Action_Table</definition>
        <argsstring></argsstring>
        <name>PDDLop_Action_Table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="50" column="35" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a8f27a3ee6204d2575c60ba1464004972" prot="public" static="no">
        <type>std::vector&lt; Fluent_Ptr_Vec &gt;</type>
        <definition>typedef std::vector&lt; Fluent_Ptr_Vec &gt; aptk::Type_Fluent_Table</definition>
        <argsstring></argsstring>
        <name>Type_Fluent_Table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="51" column="27" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a514b7da3f0e5ae444d1352b3d0f28374" prot="public" static="no">
        <type>std::vector&lt; Fluent_Ptr_Vec &gt;</type>
        <definition>typedef std::vector&lt; Fluent_Ptr_Vec &gt; aptk::Object_Fluent_Table</definition>
        <argsstring></argsstring>
        <name>Object_Fluent_Table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="52" column="27" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="types_8hxx_1a90ad1ab9649a112570f3d4e87f643015" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; unsigned, unsigned &gt; &gt;</type>
        <definition>typedef std::vector&lt; std::pair&lt;unsigned, unsigned&gt; &gt; aptk::VarVal_Vec</definition>
        <argsstring></argsstring>
        <name>VarVal_Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" line="53" column="22" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/types.hxx" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="search__prob_8hxx_1a83406033563fad0298957dc3af01f39a" prot="public" static="no" mutable="no">
        <type>const Action_Idx</type>
        <definition>const Action_Idx aptk::no_op</definition>
        <argsstring></argsstring>
        <name>no_op</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/search_prob.hxx" line="35" column="17" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/search_prob.hxx" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="strips__state_8hxx_1a10ef5351589d4187500cf44d82bf6203" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; aptk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, State &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/strips_state.hxx" line="184" column="8" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/strips_state.hxx" bodystart="184" bodyend="191" declfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/strips_state.hxx" declline="162" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="strips__state_8hxx_1ac7635ed43c040893d6778a30cd3d1856" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; aptk::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const State &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/strips_state.hxx" line="194" column="8" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/strips_state.hxx" bodystart="194" bodyend="201" declfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/model/strips_state.hxx" declline="163" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="bit__set_8hxx_1aab1a177674bedbef3c0379f74fa0950e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aptk::do_intersect</definition>
        <argsstring>(const Bit_Set &amp;lhs, const Bit_Set &amp;rhs)</argsstring>
        <name>do_intersect</name>
        <param>
          <type>const <ref refid="classaptk_1_1Bit__Set" kindref="compound">Bit_Set</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classaptk_1_1Bit__Set" kindref="compound">Bit_Set</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/bit_set.hxx" line="180" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/bit_set.hxx" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="ext__math_8hxx_1aa9edd04c00c751b6dbc76a1148dd808b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T aptk::add</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>add</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" line="32" column="3" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="ext__math_8hxx_1a4aadb144f96c989b334f07ca72ee1091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T aptk::abs_add</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>abs_add</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" line="39" column="3" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="ext__math_8hxx_1a11ae25459a45d3efa956b7fad072b7d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aptk::dless</definition>
        <argsstring>(float f1, float f2)</argsstring>
        <name>dless</name>
        <param>
          <type>float</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" line="46" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="ext__math_8hxx_1a892165d3256167e2f9ed1069571cb7c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aptk::dequal</definition>
        <argsstring>(float f1, float f2)</argsstring>
        <name>dequal</name>
        <param>
          <type>float</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" line="52" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="ext__math_8hxx_1acb87204a877a9fb86efb54b4bb8ba999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T aptk::pow</definition>
        <argsstring>(T a, unsigned b)</argsstring>
        <name>pow</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" line="60" column="3" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" bodystart="60" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="ext__math_8hxx_1a00d014bb9ebbaa2a9898ebde184da101" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t aptk::unrolled_pow_z</definition>
        <argsstring>(size_t n, unsigned k)</argsstring>
        <name>unrolled_pow_z</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" line="72" column="8" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" bodystart="72" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="ext__math_8hxx_1a1c226710399e1073b31c15f914344e14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned aptk::unrolled_pow</definition>
        <argsstring>(unsigned n, unsigned k)</argsstring>
        <name>unrolled_pow</name>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" line="86" column="10" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/ext_math.hxx" bodystart="86" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="memory_8cxx_1a9281c9b4beeffd8d51f30800a93fbe04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::report_memory_usage</definition>
        <argsstring>()</argsstring>
        <name>report_memory_usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/memory.cxx" line="27" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/memory.cxx" bodystart="27" bodyend="37" declfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/memory.hxx" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="resources__control_8hxx_1a4bc041071c4b942d9e0a0e8008318257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double aptk::time_used</definition>
        <argsstring>()</argsstring>
        <name>time_used</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/resources_control.hxx" line="34" column="16" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/resources_control.hxx" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="resources__control_8hxx_1aee83f585a84a587777e38fc067189aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::report_interval</definition>
        <argsstring>(double t0, double t1, Stream &amp;os)</argsstring>
        <name>report_interval</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/resources_control.hxx" line="47" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/resources_control.hxx" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="resources__control_8hxx_1a06e3de2fb6413b3104bd541523794eea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double aptk::mem_used</definition>
        <argsstring>()</argsstring>
        <name>mem_used</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/resources_control.hxx" line="56" column="15" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/resources_control.hxx" bodystart="56" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="string__conversions_8hxx_1a02e3eb4b75973b00539df9243c787ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string aptk::to_string</definition>
        <argsstring>(T &amp;value, std::ios_base &amp;(*converter)(std::ios_base &amp;))</argsstring>
        <name>to_string</name>
        <param>
          <type>T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::ios_base &amp;(*)(std::ios_base &amp;)</type>
          <declname>converter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/string_conversions.hxx" line="33" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/string_conversions.hxx" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="string__conversions_8hxx_1a40ea6788dbfcbf643140b7af451943e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool aptk::from_string</definition>
        <argsstring>(T &amp;value, const std::string &amp;s, std::ios_base &amp;(*converter)(std::ios_base &amp;))</argsstring>
        <name>from_string</name>
        <param>
          <type>T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::ios_base &amp;(*)(std::ios_base &amp;)</type>
          <declname>converter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/string_conversions.hxx" line="41" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/string_conversions.hxx" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="time_8hxx_1abf660038837b7d66deb2ff3093ef1d2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::report_interval</definition>
        <argsstring>(double t0, double t1, std::ostream &amp;os)</argsstring>
        <name>report_interval</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/time.hxx" line="49" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/utility/time.hxx" bodystart="49" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/at_bfs_f-ffparser/ipc2014_rwa.hxx" line="28" column="1"/>
  </compounddef>
</doxygen>
