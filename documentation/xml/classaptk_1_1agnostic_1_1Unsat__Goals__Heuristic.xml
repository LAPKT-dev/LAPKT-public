<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic" kind="class" language="C++" prot="public">
    <compoundname>aptk::agnostic::Unsat_Goals_Heuristic</compoundname>
    <basecompoundref refid="classaptk_1_1Heuristic" prot="public" virt="non-virtual">aptk::Heuristic&lt; State &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Search_Model</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a219692d07fb6d8b0a2c9fd658d5848f3" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classaptk_1_1STRIPS__Problem" kindref="compound">STRIPS_Problem</ref> &amp;</type>
        <definition>const STRIPS_Problem&amp; aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::m_strips_model</definition>
        <argsstring></argsstring>
        <name>m_strips_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="91" column="21" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1ac17cc71f205dc2a6c097c47f99aec48a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::Unsat_Goals_Heuristic</definition>
        <argsstring>(const Search_Model &amp;prob)</argsstring>
        <name>Unsat_Goals_Heuristic</name>
        <param>
          <type>const Search_Model &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="37" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a2f94498cc45e40548802d9d52d913478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::~Unsat_Goals_Heuristic</definition>
        <argsstring>()</argsstring>
        <name>~Unsat_Goals_Heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="41" column="9" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a18593f44ce651f9ab246c463c392acea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::eval</definition>
        <argsstring>(const Search_Node *n, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="46" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a27afa073063843261a311678b520ea73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::eval</definition>
        <argsstring>(const Search_Node *n, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="52" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a209f310e1f250c75a7e91801b5bb1ec1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="57" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a6f71730a89f7686dc4823fafc159a096" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="61" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="61" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a4d7c529afe9c749a1f839c11e4597389" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;::count_goals</definition>
        <argsstring>(const State &amp;s) const</argsstring>
        <name>count_goals</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="80" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="80" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_strips_model</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>aptk::STRIPS_Problem</label>
        <link refid="classaptk_1_1STRIPS__Problem"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_succ_gen</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_succ_gen_v3</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_mutexes</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_succ_gen_v2</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>aptk::agnostic::Match_Tree</label>
        <link refid="classaptk_1_1agnostic_1_1Match__Tree"/>
      </node>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
      <node id="5">
        <label>aptk::WatchedLitSuccGen</label>
        <link refid="classaptk_1_1WatchedLitSuccGen"/>
      </node>
      <node id="6">
        <label>aptk::agnostic::Mutex_Set</label>
        <link refid="classaptk_1_1agnostic_1_1Mutex__Set"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>aptk::agnostic::Successor_Generator</label>
        <link refid="classaptk_1_1agnostic_1_1Successor__Generator"/>
      </node>
    </collaborationgraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" line="34" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_unsat.hxx" bodystart="34" bodyend="93"/>
    <listofallmembers>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a4d7c529afe9c749a1f839c11e4597389" prot="protected" virt="non-virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>count_goals</name></member>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a18593f44ce651f9ab246c463c392acea" prot="public" virt="non-virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a27afa073063843261a311678b520ea73" prot="public" virt="non-virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a209f310e1f250c75a7e91801b5bb1ec1" prot="public" virt="virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a6f71730a89f7686dc4823fafc159a096" prot="public" virt="virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1Heuristic_1a86eeb6445f46d830c14b319b7e5a2fda" prot="public" virt="non-virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a13825fc30fc7f2d3f4ba5da0b4ee32f7" prot="public" virt="virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>init</name></member>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a219692d07fb6d8b0a2c9fd658d5848f3" prot="protected" virt="non-virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>m_strips_model</name></member>
      <member refid="classaptk_1_1Heuristic_1a44636224e625098eafd41fe54990b9d1" prot="public" virt="non-virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>problem</name></member>
      <member refid="classaptk_1_1Heuristic_1a95f567fe7f990819bfe72d08758b195e" prot="public" virt="virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>reset</name></member>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1ac17cc71f205dc2a6c097c47f99aec48a" prot="public" virt="non-virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>Unsat_Goals_Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a2b0f4d681e5a565be755a3d2a8c30608" prot="public" virt="virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>~Heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic_1a2f94498cc45e40548802d9d52d913478" prot="public" virt="virtual"><scope>aptk::agnostic::Unsat_Goals_Heuristic</scope><name>~Unsat_Goals_Heuristic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
