<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1agnostic_1_1EmptyNode" kind="class" language="C++" prot="public">
    <compoundname>aptk::agnostic::EmptyNode</compoundname>
    <basecompoundref refid="classaptk_1_1agnostic_1_1BaseNode" prot="public" virt="non-virtual">aptk::agnostic::BaseNode</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1EmptyNode_1a3151fd2ca9acd60a030f8736d8b32bbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::EmptyNode::generate_applicable_items</definition>
        <argsstring>(const State &amp;, std::vector&lt; int &gt; &amp;)</argsstring>
        <name>generate_applicable_items</name>
        <reimplements refid="classaptk_1_1agnostic_1_1BaseNode_1a3195dbe8b83d90482c46be0fbd4c1f99">generate_applicable_items</reimplements>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="80" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1EmptyNode_1a0f0087069d78782e0445b8845e962b90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void aptk::agnostic::EmptyNode::dump</definition>
        <argsstring>(std::string indent, const STRIPS_Problem &amp;prob) const</argsstring>
        <name>dump</name>
        <reimplements refid="classaptk_1_1agnostic_1_1BaseNode_1acf202411cffa6dd9b52e34f6ec45cd78">dump</reimplements>
        <param>
          <type>std::string</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>const <ref refid="classaptk_1_1STRIPS__Problem" kindref="compound">STRIPS_Problem</ref> &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="81" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.cxx" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1EmptyNode_1a4662c3ca0a811616d3af91d4040c81ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int aptk::agnostic::EmptyNode::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <reimplements refid="classaptk_1_1agnostic_1_1BaseNode_1a780a2e37298e2203a2d25a51e3a6be8a">count</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="82" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="82" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>aptk::agnostic::EmptyNode</label>
        <link refid="classaptk_1_1agnostic_1_1EmptyNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>aptk::agnostic::BaseNode</label>
        <link refid="classaptk_1_1agnostic_1_1BaseNode"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>aptk::agnostic::EmptyNode</label>
        <link refid="classaptk_1_1agnostic_1_1EmptyNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>aptk::agnostic::BaseNode</label>
        <link refid="classaptk_1_1agnostic_1_1BaseNode"/>
      </node>
    </collaborationgraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="78" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="78" bodyend="83"/>
    <listofallmembers>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1add30cd61e4fd8744b532fca49265763c" prot="public" virt="non-virtual"><scope>aptk::agnostic::EmptyNode</scope><name>action_done</name></member>
      <member refid="classaptk_1_1agnostic_1_1EmptyNode_1a4662c3ca0a811616d3af91d4040c81ce" prot="public" virt="virtual"><scope>aptk::agnostic::EmptyNode</scope><name>count</name></member>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1a12561b504fa9ee56e2ddf261069546d8" prot="public" virt="non-virtual"><scope>aptk::agnostic::EmptyNode</scope><name>create_tree</name></member>
      <member refid="classaptk_1_1agnostic_1_1EmptyNode_1a0f0087069d78782e0445b8845e962b90" prot="public" virt="virtual"><scope>aptk::agnostic::EmptyNode</scope><name>dump</name></member>
      <member refid="classaptk_1_1agnostic_1_1EmptyNode_1a3151fd2ca9acd60a030f8736d8b32bbc" prot="public" virt="virtual"><scope>aptk::agnostic::EmptyNode</scope><name>generate_applicable_items</name></member>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1a635b7ea3e4afd81bcf69c30fd14f6189" prot="public" virt="non-virtual"><scope>aptk::agnostic::EmptyNode</scope><name>get_best_var</name></member>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1ab135d5770ad68a4e4ad009b32249be15" prot="public" virt="virtual"><scope>aptk::agnostic::EmptyNode</scope><name>~BaseNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
