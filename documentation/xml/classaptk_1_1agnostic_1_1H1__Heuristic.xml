<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1agnostic_1_1H1__Heuristic" kind="class" language="C++" prot="public">
    <compoundname>aptk::agnostic::H1_Heuristic</compoundname>
    <basecompoundref refid="classaptk_1_1Heuristic" prot="public" virt="non-virtual">aptk::Heuristic&lt; State &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Search_Model</type>
      </param>
      <param>
        <type>typename Fluent_Set_Eval_Func</type>
      </param>
      <param>
        <type>H1_Cost_Function</type>
        <declname>cost_opt</declname>
        <defname>cost_opt</defname>
        <defval>H1_Cost_Function::Use_Costs</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a244c449f33e3196f315af2791ffdb5ee" prot="public" static="no">
        <type><ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">STRIPS_Problem::Best_Supporter</ref></type>
        <definition>typedef STRIPS_Problem::Best_Supporter aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::Best_Supporter</definition>
        <argsstring></argsstring>
        <name>Best_Supporter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="89" column="40" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a28a472ece3a683b26198eb32a2245aa6" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classaptk_1_1STRIPS__Problem" kindref="compound">STRIPS_Problem</ref> &amp;</type>
        <definition>const STRIPS_Problem&amp; aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_strips_model</definition>
        <argsstring></argsstring>
        <name>m_strips_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="540" column="21" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a9a95f174998064fc1882b71c0c56fad9" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_values</definition>
        <argsstring></argsstring>
        <name>m_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="541" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a80c58ebdbeb71f7f4e563647adc44110" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_difficulties</definition>
        <argsstring></argsstring>
        <name>m_difficulties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="542" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a158c6ab5cf4c4b44350536fef2a8b5c8" prot="protected" static="no" mutable="no">
        <type>Fluent_Set_Eval_Func</type>
        <definition>Fluent_Set_Eval_Func aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval_func</definition>
        <argsstring></argsstring>
        <name>eval_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="543" column="21" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1aa09d1827e2f61613e2cf2031e5e82b67" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref> &gt;</type>
        <definition>std::vector&lt; Best_Supporter &gt; aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_best_supporters</definition>
        <argsstring></argsstring>
        <name>m_best_supporters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="544" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a61471114883b216ccd3b3915ac230813" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; const <ref refid="classaptk_1_1Action" kindref="compound">Action</ref> * &gt;</type>
        <definition>std::vector&lt;const Action*&gt; aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_app_set</definition>
        <argsstring></argsstring>
        <name>m_app_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="545" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a8e68b896b6c727a6ef302d39107f742e" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::set&lt; unsigned &gt; &gt;</type>
        <definition>std::vector&lt; std::set&lt;unsigned&gt; &gt; aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_relevant_actions</definition>
        <argsstring></argsstring>
        <name>m_relevant_actions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="546" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1ab5137133a6632ca3511d83b72d86edb6" prot="protected" static="no" mutable="no">
        <type>boost::circular_buffer&lt; int &gt;</type>
        <definition>boost::circular_buffer&lt;int&gt; aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_updated</definition>
        <argsstring></argsstring>
        <name>m_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="548" column="23" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1aa3c1250a0189aa509cd0df0ddaedca13" prot="protected" static="no" mutable="no">
        <type><ref refid="classaptk_1_1Bit__Set" kindref="compound">Bit_Set</ref></type>
        <definition>Bit_Set aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_already_updated</definition>
        <argsstring></argsstring>
        <name>m_already_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="549" column="8" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a7841fd21aa2d7f1381ea07f540feca34" prot="protected" static="no" mutable="no">
        <type>Bool_Vec</type>
        <definition>Bool_Vec aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::m_allowed_actions</definition>
        <argsstring></argsstring>
        <name>m_allowed_actions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="550" column="41" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="550" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a9160efe921b651cb261e7ba110f50f0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::H1_Heuristic</definition>
        <argsstring>(const Search_Model &amp;prob)</argsstring>
        <name>H1_Heuristic</name>
        <param>
          <type>const Search_Model &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="91" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="91" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a097bccaaa636019007419352b3fee97f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::~H1_Heuristic</definition>
        <argsstring>()</argsstring>
        <name>~H1_Heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="125" column="9" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="125" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1ac1d2b961e4bbeef9e8b9dd7f2799a948" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::value</definition>
        <argsstring>(unsigned p) const</argsstring>
        <name>value</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="128" column="7" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a7df7a454ff4f8053a2d34bf364091899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="133" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a221daddcb131d45e655f6d35be5a37d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="139" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1abc4e52c045acea738890cc98a5f2f6c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const Fluent_Vec &amp;s, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const Fluent_Vec &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="144" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a8edc849b410c4f8b340e696ad2ac6e4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_out)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="149" column="7" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="149" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1abc0ce6bb14d59f33e2f061f6fe2cf1f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval_reachability</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, Fluent_Vec *persist_fluents=NULL)</argsstring>
        <name>eval_reachability</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>Fluent_Vec *</type>
          <declname>persist_fluents</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="161" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="161" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a39e1685dd457587b6d075a8edfce96c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="170" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a4c551d95d356d2eefb4672fb07b2a053" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::print_values</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>print_values</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="175" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="175" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a33af4a3e7c899f45dcce0f0ecf6e9d69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref></type>
        <definition>Best_Supporter aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::get_best_supporter</definition>
        <argsstring>(unsigned f) const</argsstring>
        <name>get_best_supporter</name>
        <param>
          <type>unsigned</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="183" column="15" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a92621e8bd59a142ae9128f791c090b73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::get_best_supporters</definition>
        <argsstring>(unsigned f, Action_Ptr_Const_Vec &amp;bfs) const</argsstring>
        <name>get_best_supporters</name>
        <param>
          <type>unsigned</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Action_Ptr_Const_Vec &amp;</type>
          <declname>bfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="187" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="187" bodyend="230"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1afeac541291c31d101a877958ffc7771a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::update</definition>
        <argsstring>(unsigned p, float v)</argsstring>
        <name>update</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="234" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="234" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1ac65e739b8ee8b8deaebd9884d875a45c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::update</definition>
        <argsstring>(unsigned p, float v, Best_Supporter bs)</argsstring>
        <name>update</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref></type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="243" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a7f71d45906ff8545f9871377167002c2" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::eval_diff</definition>
        <argsstring>(const Best_Supporter &amp;bs) const</argsstring>
        <name>eval_diff</name>
        <param>
          <type>const <ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref> &amp;</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="247" column="7" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="247" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1ac728eddbaea5fdd1a662b1eed4553a40" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::update</definition>
        <argsstring>(unsigned p, float v, unsigned act_idx, unsigned eff_idx)</argsstring>
        <name>update</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>act_idx</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>eff_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="261" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="261" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a646a0ef4e6261a484e77ec8351a0fbcb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::set</definition>
        <argsstring>(unsigned p, float v)</argsstring>
        <name>set</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="282" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="282" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a20f7382b71141f93cc2c21ced44dd0ec" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::initialize</definition>
        <argsstring>(const State &amp;s)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="290" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="290" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a476ba140883fb993c402b87ad052320e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::compute</definition>
        <argsstring>()</argsstring>
        <name>compute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="322" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="322" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1H1__Heuristic_1a9e7adbf684f2a32aa6f046b0bdd82e84" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;::compute_reachability</definition>
        <argsstring>(Fluent_Vec *persist_fluents=NULL)</argsstring>
        <name>compute_reachability</name>
        <param>
          <type>Fluent_Vec *</type>
          <declname>persist_fluents</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>If actions edel or adds fluent that has to persist, exclude action.</para>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="451" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="451" bodyend="536"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
      <node id="1">
        <label>aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H1__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>aptk::STRIPS_Problem</label>
        <link refid="classaptk_1_1STRIPS__Problem"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_succ_gen</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_succ_gen_v3</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_mutexes</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_succ_gen_v2</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>aptk::agnostic::Match_Tree</label>
        <link refid="classaptk_1_1agnostic_1_1Match__Tree"/>
      </node>
      <node id="9">
        <label>aptk::Bit_Array</label>
        <link refid="classaptk_1_1Bit__Array"/>
      </node>
      <node id="8">
        <label>aptk::Bit_Set</label>
        <link refid="classaptk_1_1Bit__Set"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_fset</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
      <node id="5">
        <label>aptk::WatchedLitSuccGen</label>
        <link refid="classaptk_1_1WatchedLitSuccGen"/>
      </node>
      <node id="1">
        <label>aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H1__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_strips_model</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_already_updated</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>aptk::agnostic::Mutex_Set</label>
        <link refid="classaptk_1_1agnostic_1_1Mutex__Set"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>aptk::agnostic::Successor_Generator</label>
        <link refid="classaptk_1_1agnostic_1_1Successor__Generator"/>
      </node>
    </collaborationgraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" line="86" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_1.hxx" bodystart="86" bodyend="551"/>
    <listofallmembers>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a244c449f33e3196f315af2791ffdb5ee" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>Best_Supporter</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a476ba140883fb993c402b87ad052320e" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>compute</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a9e7adbf684f2a32aa6f046b0bdd82e84" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>compute_reachability</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a7df7a454ff4f8053a2d34bf364091899" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a221daddcb131d45e655f6d35be5a37d4" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1abc4e52c045acea738890cc98a5f2f6c5" prot="public" virt="virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a8edc849b410c4f8b340e696ad2ac6e4e" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a39e1685dd457587b6d075a8edfce96c0" prot="public" virt="virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a7f71d45906ff8545f9871377167002c2" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval_diff</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a158c6ab5cf4c4b44350536fef2a8b5c8" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval_func</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1abc0ce6bb14d59f33e2f061f6fe2cf1f6" prot="public" virt="virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>eval_reachability</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a33af4a3e7c899f45dcce0f0ecf6e9d69" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>get_best_supporter</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a92621e8bd59a142ae9128f791c090b73" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>get_best_supporters</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a9160efe921b651cb261e7ba110f50f0a" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>H1_Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a86eeb6445f46d830c14b319b7e5a2fda" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a13825fc30fc7f2d3f4ba5da0b4ee32f7" prot="public" virt="virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>init</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a20f7382b71141f93cc2c21ced44dd0ec" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>initialize</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a7841fd21aa2d7f1381ea07f540feca34" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_allowed_actions</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1aa3c1250a0189aa509cd0df0ddaedca13" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_already_updated</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a61471114883b216ccd3b3915ac230813" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_app_set</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1aa09d1827e2f61613e2cf2031e5e82b67" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_best_supporters</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a80c58ebdbeb71f7f4e563647adc44110" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_difficulties</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a8e68b896b6c727a6ef302d39107f742e" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_relevant_actions</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a28a472ece3a683b26198eb32a2245aa6" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_strips_model</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1ab5137133a6632ca3511d83b72d86edb6" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_updated</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a9a95f174998064fc1882b71c0c56fad9" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>m_values</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a4c551d95d356d2eefb4672fb07b2a053" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>print_values</name></member>
      <member refid="classaptk_1_1Heuristic_1a44636224e625098eafd41fe54990b9d1" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>problem</name></member>
      <member refid="classaptk_1_1Heuristic_1a95f567fe7f990819bfe72d08758b195e" prot="public" virt="virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>reset</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a646a0ef4e6261a484e77ec8351a0fbcb" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>set</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1afeac541291c31d101a877958ffc7771a" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>update</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1ac65e739b8ee8b8deaebd9884d875a45c" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>update</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1ac728eddbaea5fdd1a662b1eed4553a40" prot="protected" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>update</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1ac1d2b961e4bbeef9e8b9dd7f2799a948" prot="public" virt="non-virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>value</name></member>
      <member refid="classaptk_1_1agnostic_1_1H1__Heuristic_1a097bccaaa636019007419352b3fee97f" prot="public" virt="virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>~H1_Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a2b0f4d681e5a565be755a3d2a8c30608" prot="public" virt="virtual"><scope>aptk::agnostic::H1_Heuristic</scope><name>~Heuristic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
