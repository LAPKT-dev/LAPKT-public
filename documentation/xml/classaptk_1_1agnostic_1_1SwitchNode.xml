<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1agnostic_1_1SwitchNode" kind="class" language="C++" prot="public">
    <compoundname>aptk::agnostic::SwitchNode</compoundname>
    <basecompoundref refid="classaptk_1_1agnostic_1_1BaseNode" prot="public" virt="non-virtual">aptk::agnostic::BaseNode</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1SwitchNode_1a8f50b30fcaca77169cb10f35de542b9a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int aptk::agnostic::SwitchNode::switch_var</definition>
        <argsstring></argsstring>
        <name>switch_var</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="55" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1SwitchNode_1aa019c493b861a9092104569210bffa09" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; aptk::agnostic::SwitchNode::immediate_items</definition>
        <argsstring></argsstring>
        <name>immediate_items</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="56" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1SwitchNode_1a967bd442074fee948bc44b00b01785aa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classaptk_1_1agnostic_1_1BaseNode" kindref="compound">BaseNode</ref> * &gt;</type>
        <definition>std::vector&lt;BaseNode *&gt; aptk::agnostic::SwitchNode::children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="57" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1SwitchNode_1a1a6a5b03ff67872640d48583a754c2f8" prot="private" static="no" mutable="no">
        <type><ref refid="classaptk_1_1agnostic_1_1BaseNode" kindref="compound">BaseNode</ref> *</type>
        <definition>BaseNode* aptk::agnostic::SwitchNode::default_child</definition>
        <argsstring></argsstring>
        <name>default_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="58" column="11" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1SwitchNode_1a60c3b7d316f55ef21904297738de5826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>aptk::agnostic::SwitchNode::SwitchNode</definition>
        <argsstring>(std::vector&lt; int &gt; &amp;actions, std::vector&lt; bool &gt; &amp;vars_seen, const STRIPS_Problem &amp;prob)</argsstring>
        <name>SwitchNode</name>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>vars_seen</declname>
        </param>
        <param>
          <type>const <ref refid="classaptk_1_1STRIPS__Problem" kindref="compound">STRIPS_Problem</ref> &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="61" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.cxx" bodystart="140" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1SwitchNode_1ad0f189207afbf784b3dd3f70fd98b993" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void aptk::agnostic::SwitchNode::generate_applicable_items</definition>
        <argsstring>(const State &amp;s, std::vector&lt; int &gt; &amp;actions)</argsstring>
        <name>generate_applicable_items</name>
        <reimplements refid="classaptk_1_1agnostic_1_1BaseNode_1a3195dbe8b83d90482c46be0fbd4c1f99">generate_applicable_items</reimplements>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>actions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="62" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.cxx" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1SwitchNode_1aac282f055cdc39f40867c7b170d57b66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void aptk::agnostic::SwitchNode::dump</definition>
        <argsstring>(std::string indent, const STRIPS_Problem &amp;prob) const</argsstring>
        <name>dump</name>
        <reimplements refid="classaptk_1_1agnostic_1_1BaseNode_1acf202411cffa6dd9b52e34f6ec45cd78">dump</reimplements>
        <param>
          <type>std::string</type>
          <declname>indent</declname>
        </param>
        <param>
          <type>const <ref refid="classaptk_1_1STRIPS__Problem" kindref="compound">STRIPS_Problem</ref> &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="63" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.cxx" bodystart="179" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1SwitchNode_1ae660f51f4593ddc490aefad49f807291" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int aptk::agnostic::SwitchNode::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <reimplements refid="classaptk_1_1agnostic_1_1BaseNode_1a780a2e37298e2203a2d25a51e3a6be8a">count</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="64" column="13" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.cxx" bodystart="192" bodyend="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>aptk::agnostic::BaseNode</label>
        <link refid="classaptk_1_1agnostic_1_1BaseNode"/>
      </node>
      <node id="1">
        <label>aptk::agnostic::SwitchNode</label>
        <link refid="classaptk_1_1agnostic_1_1SwitchNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>aptk::agnostic::BaseNode</label>
        <link refid="classaptk_1_1agnostic_1_1BaseNode"/>
      </node>
      <node id="1">
        <label>aptk::agnostic::SwitchNode</label>
        <link refid="classaptk_1_1agnostic_1_1SwitchNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" line="54" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/search/match_tree.hxx" bodystart="54" bodyend="65"/>
    <listofallmembers>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1add30cd61e4fd8744b532fca49265763c" prot="public" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>action_done</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1a967bd442074fee948bc44b00b01785aa" prot="private" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>children</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1ae660f51f4593ddc490aefad49f807291" prot="public" virt="virtual"><scope>aptk::agnostic::SwitchNode</scope><name>count</name></member>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1a12561b504fa9ee56e2ddf261069546d8" prot="public" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>create_tree</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1a1a6a5b03ff67872640d48583a754c2f8" prot="private" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>default_child</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1aac282f055cdc39f40867c7b170d57b66" prot="public" virt="virtual"><scope>aptk::agnostic::SwitchNode</scope><name>dump</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1ad0f189207afbf784b3dd3f70fd98b993" prot="public" virt="virtual"><scope>aptk::agnostic::SwitchNode</scope><name>generate_applicable_items</name></member>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1a635b7ea3e4afd81bcf69c30fd14f6189" prot="public" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>get_best_var</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1aa019c493b861a9092104569210bffa09" prot="private" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>immediate_items</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1a8f50b30fcaca77169cb10f35de542b9a" prot="private" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>switch_var</name></member>
      <member refid="classaptk_1_1agnostic_1_1SwitchNode_1a60c3b7d316f55ef21904297738de5826" prot="public" virt="non-virtual"><scope>aptk::agnostic::SwitchNode</scope><name>SwitchNode</name></member>
      <member refid="classaptk_1_1agnostic_1_1BaseNode_1ab135d5770ad68a4e4ad009b32249be15" prot="public" virt="virtual"><scope>aptk::agnostic::SwitchNode</scope><name>~BaseNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
