<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic" kind="class" language="C++" prot="public">
    <compoundname>aptk::agnostic::Relaxed_Plan_Heuristic</compoundname>
    <basecompoundref refid="classaptk_1_1Heuristic" prot="public" virt="non-virtual">aptk::Heuristic&lt; State &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Search_Model</type>
      </param>
      <param>
        <type>typename Primary_Heuristic</type>
      </param>
      <param>
        <type>RP_Cost_Function</type>
        <declname>cost_opt</declname>
        <defname>cost_opt</defname>
        <defval>RP_Cost_Function::Use_Costs</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1adf07835fdce45854eedb5dbf88e1952a" prot="protected" static="no" mutable="no">
        <type>Primary_Heuristic</type>
        <definition>Primary_Heuristic aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::m_base_heuristic</definition>
        <argsstring></argsstring>
        <name>m_base_heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="513" column="18" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1acfa16c1b1f0deefd7bec5091e9df5974" prot="protected" static="no" mutable="no">
        <type><ref refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Extractor" kindref="compound">Relaxed_Plan_Extractor</ref>&lt; Primary_Heuristic, cost_opt &gt;</type>
        <definition>Relaxed_Plan_Extractor&lt; Primary_Heuristic, cost_opt &gt; aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::m_plan_extractor</definition>
        <argsstring></argsstring>
        <name>m_plan_extractor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="514" column="23" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="514" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a7b985426d0dcce814409a57ec043ad4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::Relaxed_Plan_Heuristic</definition>
        <argsstring>(const Search_Model &amp;prob)</argsstring>
        <name>Relaxed_Plan_Heuristic</name>
        <param>
          <type>const Search_Model &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="435" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a9caebaaaac1cc6856246d6c0024eece0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::~Relaxed_Plan_Heuristic</definition>
        <argsstring>()</argsstring>
        <name>~Relaxed_Plan_Heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="440" column="9" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="440" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1adb517dd21dfea4388d049785a9cc03c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, Cost_Type &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="443" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="443" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a20919c134169e46914db65ac548b52d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, Cost_Type &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="449" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="449" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a42f53d0c3f725551515e570079ff496a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_out)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="455" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="455" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a8cf89a9fa7e5ff08937442c678a80dab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_out, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="465" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="465" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ae4c29950e9118bdd4b0c44b237a60a85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_out, Cost_Type &amp;h_out_rp, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out_rp</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="473" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="473" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ab202e9bf8a1ec5ef4ac970a29130ef71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_out, std::vector&lt; Action_Idx &gt; &amp;pref_ops, std::vector&lt; Action_Idx &gt; &amp;rel_plan)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>rel_plan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="482" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="482" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1af143d5d7738fed86113dd5058f30f88d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_out, std::vector&lt; Action_Idx &gt; &amp;pref_ops, Fluent_Vec *goals)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>Fluent_Vec *</type>
          <declname>goals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="489" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="489" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ad61454aea2dd202cd4ad8e20a03840b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Cost_Type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_out, std::vector&lt; Action_Idx &gt; &amp;pref_ops, std::vector&lt; Action_Idx &gt; &amp;rel_plan, Fluent_Vec *goals)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_out</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>rel_plan</declname>
        </param>
        <param>
          <type>Fluent_Vec *</type>
          <declname>goals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="496" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="496" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ab658e1368cd5b1fe7ee978a03d760686" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::ignore_rp_h_value</definition>
        <argsstring>(bool b)</argsstring>
        <name>ignore_rp_h_value</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="502" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="502" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a31ecc1e34c3400a6be8417626f4e497a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::set_one_HA_per_fluent</definition>
        <argsstring>(bool b)</argsstring>
        <name>set_one_HA_per_fluent</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="504" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="504" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a96028be8d52139eab23f41b672017263" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::is_relaxed_plan_relevant</definition>
        <argsstring>(unsigned p)</argsstring>
        <name>is_relaxed_plan_relevant</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="506" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="506" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a57122df8cda33036aa0cabc8d5e9e4e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::value</definition>
        <argsstring>(unsigned p)</argsstring>
        <name>value</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="508" column="10" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="508" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a2c9536f90f90d0b154c22a65cf016d82" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::print_values</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>print_values</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="510" column="25" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="510" bodyend="510"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_plan_extractor</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>aptk::STRIPS_Problem</label>
        <link refid="classaptk_1_1STRIPS__Problem"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_succ_gen</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_succ_gen_v3</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_mutexes</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_succ_gen_v2</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>aptk::agnostic::Match_Tree</label>
        <link refid="classaptk_1_1agnostic_1_1Match__Tree"/>
      </node>
      <node id="10">
        <label>aptk::Bit_Array</label>
        <link refid="classaptk_1_1Bit__Array"/>
      </node>
      <node id="9">
        <label>aptk::Bit_Set</label>
        <link refid="classaptk_1_1Bit__Set"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_fset</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
      <node id="6">
        <label>aptk::WatchedLitSuccGen</label>
        <link refid="classaptk_1_1WatchedLitSuccGen"/>
      </node>
      <node id="7">
        <label>aptk::agnostic::Mutex_Set</label>
        <link refid="classaptk_1_1agnostic_1_1Mutex__Set"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>aptk::agnostic::Successor_Generator</label>
        <link refid="classaptk_1_1agnostic_1_1Successor__Generator"/>
      </node>
      <node id="3">
        <label>aptk::agnostic::Relaxed_Plan_Extractor&lt; Primary_Heuristic, RP_Cost_Function::Use_Costs &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Extractor"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_strips_model</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_po_set</edgelabel>
          <edgelabel>m_rp_precs</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_act_seen</edgelabel>
          <edgelabel>m_init_fluents</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" line="431" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/rp_heuristic.hxx" bodystart="432" bodyend="515"/>
    <listofallmembers>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1adb517dd21dfea4388d049785a9cc03c6" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a20919c134169e46914db65ac548b52d7" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a42f53d0c3f725551515e570079ff496a" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a8cf89a9fa7e5ff08937442c678a80dab" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ae4c29950e9118bdd4b0c44b237a60a85" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ab202e9bf8a1ec5ef4ac970a29130ef71" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1af143d5d7738fed86113dd5058f30f88d" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ad61454aea2dd202cd4ad8e20a03840b0" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1Heuristic_1a86eeb6445f46d830c14b319b7e5a2fda" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>Heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1ab658e1368cd5b1fe7ee978a03d760686" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>ignore_rp_h_value</name></member>
      <member refid="classaptk_1_1Heuristic_1a13825fc30fc7f2d3f4ba5da0b4ee32f7" prot="public" virt="virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>init</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a96028be8d52139eab23f41b672017263" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>is_relaxed_plan_relevant</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1adf07835fdce45854eedb5dbf88e1952a" prot="protected" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>m_base_heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1acfa16c1b1f0deefd7bec5091e9df5974" prot="protected" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>m_plan_extractor</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a2c9536f90f90d0b154c22a65cf016d82" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>print_values</name></member>
      <member refid="classaptk_1_1Heuristic_1a44636224e625098eafd41fe54990b9d1" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>problem</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a7b985426d0dcce814409a57ec043ad4e" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>Relaxed_Plan_Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a95f567fe7f990819bfe72d08758b195e" prot="public" virt="virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>reset</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a31ecc1e34c3400a6be8417626f4e497a" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>set_one_HA_per_fluent</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a57122df8cda33036aa0cabc8d5e9e4e2" prot="public" virt="non-virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>value</name></member>
      <member refid="classaptk_1_1Heuristic_1a2b0f4d681e5a565be755a3d2a8c30608" prot="public" virt="virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>~Heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic_1a9caebaaaac1cc6856246d6c0024eece0" prot="public" virt="virtual"><scope>aptk::agnostic::Relaxed_Plan_Heuristic</scope><name>~Relaxed_Plan_Heuristic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
