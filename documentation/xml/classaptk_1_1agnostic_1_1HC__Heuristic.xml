<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1agnostic_1_1HC__Heuristic" kind="class" language="C++" prot="public">
    <compoundname>aptk::agnostic::HC_Heuristic</compoundname>
    <templateparamlist>
      <param>
        <type>typename Fluent_Set_Eval_Func</type>
        <defval><ref refid="classaptk_1_1agnostic_1_1HC__Max__Evaluation__Function" kindref="compound">HC_Max_Evaluation_Function</ref></defval>
      </param>
      <param>
        <type>HC_Cost_Function</type>
        <declname>cost_opt</declname>
        <defname>cost_opt</defname>
        <defval>HC_Cost_Function::Use_Costs</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a22a73e42fbc97b2f59b7070f44f2ca3e" prot="public" static="no">
        <type><ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">STRIPS_Problem::Best_Supporter</ref></type>
        <definition>typedef STRIPS_Problem::Best_Supporter aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::Best_Supporter</definition>
        <argsstring></argsstring>
        <name>Best_Supporter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="65" column="40" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a0c37c7bc3e065ba87a2346b72d5e2fd7" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classaptk_1_1agnostic_1_1CC__Problem" kindref="compound">CC_Problem</ref> &amp;</type>
        <definition>const CC_Problem&amp; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="305" column="17" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a7bed5980d8391d2e2bde060f0bb1b259" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_values</definition>
        <argsstring></argsstring>
        <name>m_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="306" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a7d625e3d17670ac461f9122e8955d11c" prot="protected" static="no" mutable="no">
        <type>Fluent_Set_Eval_Func</type>
        <definition>Fluent_Set_Eval_Func aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval_func</definition>
        <argsstring></argsstring>
        <name>eval_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="307" column="21" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a0994a1e7564cbe964d0657f82c635381" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_difficulties</definition>
        <argsstring></argsstring>
        <name>m_difficulties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="308" column="52" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a0db2f3941878ceddb16fe692cdda38ab" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref> &gt;</type>
        <definition>std::vector&lt; Best_Supporter &gt; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_best_supporters</definition>
        <argsstring></argsstring>
        <name>m_best_supporters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="309" column="52" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a3210573625125ed11bbe092acafd857f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; const <ref refid="classaptk_1_1agnostic_1_1CC__Problem_1_1CC__Action" kindref="compound">CC_Problem::CC_Action</ref> *, unsigned &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; const CC_Problem::CC_Action*, unsigned &gt; &gt; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_best_cc_supporters</definition>
        <argsstring></argsstring>
        <name>m_best_cc_supporters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="310" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a058c624e7ece1776ebfb7fca30fbbd4f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; const <ref refid="classaptk_1_1agnostic_1_1CC__Problem_1_1CC__Action" kindref="compound">CC_Problem::CC_Action</ref> * &gt;</type>
        <definition>std::vector&lt;const CC_Problem::CC_Action*&gt; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_app_set</definition>
        <argsstring></argsstring>
        <name>m_app_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="311" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a1b8fd389a01d70025af330de716c4318" prot="protected" static="no" mutable="no">
        <type>std::deque&lt; unsigned &gt;</type>
        <definition>std::deque&lt;unsigned&gt; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_updated</definition>
        <argsstring></argsstring>
        <name>m_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="312" column="12" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1HC__Heuristic_1aa6e49da05d9f7831c00458c15adc0bdc" prot="protected" static="no" mutable="no">
        <type><ref refid="classaptk_1_1Bit__Set" kindref="compound">Bit_Set</ref></type>
        <definition>Bit_Set aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::m_already_updated</definition>
        <argsstring></argsstring>
        <name>m_already_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="313" column="8" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="313" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a823dfb83c8e3aa460f342b333dc58751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::HC_Heuristic</definition>
        <argsstring>(const CC_Problem &amp;prob)</argsstring>
        <name>HC_Heuristic</name>
        <param>
          <type>const <ref refid="classaptk_1_1agnostic_1_1CC__Problem" kindref="compound">CC_Problem</ref> &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="67" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1aeeea074b411a66715e03f1bbb0d89029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::~HC_Heuristic</definition>
        <argsstring>()</argsstring>
        <name>~HC_Heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="76" column="9" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="76" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a83cc38705b97ca8b79135c4bef70c0b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="80" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a2eb6d7fda8842eec7eee24c5e91f510a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="86" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1ac0107caae3d453560447bb134c7a90b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="91" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="91" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1aee4f8cf44b6b96605527653bfb6803ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="110" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a2768ffff2863f0a35397a1c8d37f282d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const Fluent_Vec &amp;s, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const Fluent_Vec &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="114" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1aa2a80a88ffd973221d2b9e981d11339d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval</definition>
        <argsstring>(const Fluent_Vec &amp;f) const</argsstring>
        <name>eval</name>
        <param>
          <type>const Fluent_Vec &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="118" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a1309336eed47d8afde312ac6754aa42d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::value</definition>
        <argsstring>(unsigned p) const</argsstring>
        <name>value</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="122" column="7" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1aabb0a120f94b26c11bdc9de1f46e474a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref></type>
        <definition>Best_Supporter aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::get_best_supporter</definition>
        <argsstring>(unsigned f) const</argsstring>
        <name>get_best_supporter</name>
        <param>
          <type>unsigned</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="124" column="15" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a9882ad4479e179bb5cb19405c49b6dc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::pair&lt; const <ref refid="classaptk_1_1agnostic_1_1CC__Problem_1_1CC__Action" kindref="compound">CC_Problem::CC_Action</ref> *, unsigned &gt; &amp;</type>
        <definition>const std::pair&lt; const CC_Problem::CC_Action*, unsigned &gt;&amp; aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::best_effect</definition>
        <argsstring>(unsigned p) const</argsstring>
        <name>best_effect</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="128" column="17" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1ab6341403f7c4365a98f33f9501e71d09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::print_values</definition>
        <argsstring>(std::ofstream &amp;os) const</argsstring>
        <name>print_values</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="132" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="132" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a0e81e7b2352b6f418570233cc9526d59" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::update</definition>
        <argsstring>(unsigned p, float v)</argsstring>
        <name>update</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="149" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="149" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1ae3f645efc58ca446a74555ea2587bbc2" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::eval_diff</definition>
        <argsstring>(const Best_Supporter &amp;bs) const</argsstring>
        <name>eval_diff</name>
        <param>
          <type>const <ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref> &amp;</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="157" column="7" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="157" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1ab4e2c0efecb1ed541434207751c33ba7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::update</definition>
        <argsstring>(unsigned p, float v, Best_Supporter bs)</argsstring>
        <name>update</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classaptk_1_1STRIPS__Problem_1_1Best__Supporter" kindref="compound">Best_Supporter</ref></type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="170" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1af1a1e44b18b4ef7862225d82deb4d39e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::update</definition>
        <argsstring>(unsigned p, float v, const CC_Problem::CC_Action *a, unsigned eff_idx=0)</argsstring>
        <name>update</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classaptk_1_1agnostic_1_1CC__Problem_1_1CC__Action" kindref="compound">CC_Problem::CC_Action</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>eff_idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="175" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="175" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a9ede930edfb598d1e1d76c5e890fd070" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::set</definition>
        <argsstring>(unsigned p, float v)</argsstring>
        <name>set</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="200" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1ae6fbf04a4a2533fff73a206a09471079" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::action_cost</definition>
        <argsstring>(const CC_Problem::CC_Action &amp;a) const</argsstring>
        <name>action_cost</name>
        <param>
          <type>const <ref refid="classaptk_1_1agnostic_1_1CC__Problem_1_1CC__Action" kindref="compound">CC_Problem::CC_Action</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="208" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a7f3f0e488b030489c653d33a0b3c1e5f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::initialize</definition>
        <argsstring>(const State &amp;s)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="212" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="212" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1HC__Heuristic_1a5b35db06256ea253a32faf261bcfbb2a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;::compute</definition>
        <argsstring>()</argsstring>
        <name>compute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="243" column="5" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="243" bodyend="300"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>aptk::STRIPS_Problem</label>
        <link refid="classaptk_1_1STRIPS__Problem"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_succ_gen</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_succ_gen_v3</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_mutexes</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_succ_gen_v2</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>aptk::agnostic::Match_Tree</label>
        <link refid="classaptk_1_1agnostic_1_1Match__Tree"/>
      </node>
      <node id="4">
        <label>aptk::Bit_Array</label>
        <link refid="classaptk_1_1Bit__Array"/>
      </node>
      <node id="3">
        <label>aptk::Bit_Set</label>
        <link refid="classaptk_1_1Bit__Set"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_fset</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>aptk::WatchedLitSuccGen</label>
        <link refid="classaptk_1_1WatchedLitSuccGen"/>
      </node>
      <node id="5">
        <label>aptk::agnostic::CC_Problem</label>
        <link refid="classaptk_1_1agnostic_1_1CC__Problem"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_orig_prob</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>aptk::agnostic::Mutex_Set</label>
        <link refid="classaptk_1_1agnostic_1_1Mutex__Set"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>aptk::agnostic::HC_Max_Evaluation_Function</label>
        <link refid="classaptk_1_1agnostic_1_1HC__Max__Evaluation__Function"/>
      </node>
      <node id="7">
        <label>aptk::agnostic::Successor_Generator</label>
        <link refid="classaptk_1_1agnostic_1_1Successor__Generator"/>
      </node>
      <node id="1">
        <label>aptk::agnostic::HC_Heuristic&lt; Fluent_Set_Eval_Func, cost_opt &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1HC__Heuristic"/>
        <childnode refid="2" relation="usage">
          <edgelabel>eval_func</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_already_updated</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" line="62" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/h_C.hxx" bodystart="62" bodyend="314"/>
    <listofallmembers>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1ae6fbf04a4a2533fff73a206a09471079" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>action_cost</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a9882ad4479e179bb5cb19405c49b6dc0" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>best_effect</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a22a73e42fbc97b2f59b7070f44f2ca3e" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>Best_Supporter</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a5b35db06256ea253a32faf261bcfbb2a" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>compute</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a83cc38705b97ca8b79135c4bef70c0b8" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a2eb6d7fda8842eec7eee24c5e91f510a" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1ac0107caae3d453560447bb134c7a90b2" prot="public" virt="virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1aee4f8cf44b6b96605527653bfb6803ba" prot="public" virt="virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a2768ffff2863f0a35397a1c8d37f282d" prot="public" virt="virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1aa2a80a88ffd973221d2b9e981d11339d" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1ae3f645efc58ca446a74555ea2587bbc2" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval_diff</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a7d625e3d17670ac461f9122e8955d11c" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>eval_func</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1aabb0a120f94b26c11bdc9de1f46e474a" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>get_best_supporter</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a823dfb83c8e3aa460f342b333dc58751" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>HC_Heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a7f3f0e488b030489c653d33a0b3c1e5f" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>initialize</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1aa6e49da05d9f7831c00458c15adc0bdc" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_already_updated</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a058c624e7ece1776ebfb7fca30fbbd4f" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_app_set</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a3210573625125ed11bbe092acafd857f" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_best_cc_supporters</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a0db2f3941878ceddb16fe692cdda38ab" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_best_supporters</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a0994a1e7564cbe964d0657f82c635381" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_difficulties</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a0c37c7bc3e065ba87a2346b72d5e2fd7" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_model</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a1b8fd389a01d70025af330de716c4318" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_updated</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a7bed5980d8391d2e2bde060f0bb1b259" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>m_values</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1ab6341403f7c4365a98f33f9501e71d09" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>print_values</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a9ede930edfb598d1e1d76c5e890fd070" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>set</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a0e81e7b2352b6f418570233cc9526d59" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>update</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1ab4e2c0efecb1ed541434207751c33ba7" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>update</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1af1a1e44b18b4ef7862225d82deb4d39e" prot="protected" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>update</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1a1309336eed47d8afde312ac6754aa42d" prot="public" virt="non-virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>value</name></member>
      <member refid="classaptk_1_1agnostic_1_1HC__Heuristic_1aeeea074b411a66715e03f1bbb0d89029" prot="public" virt="virtual"><scope>aptk::agnostic::HC_Heuristic</scope><name>~HC_Heuristic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
