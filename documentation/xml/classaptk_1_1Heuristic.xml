<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1Heuristic" kind="class" language="C++" prot="public">
    <compoundname>aptk::Heuristic</compoundname>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1H1__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::H1_Heuristic&lt; Search_Model, Fluent_Set_Eval_Func, cost_opt &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1H2__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::H2_Heuristic&lt; Search_Model, cost_opt &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Landmarks__Count__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::Landmarks_Count_Heuristic&lt; Search_Model &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Layered__H__Max" prot="public" virt="non-virtual">aptk::agnostic::Layered_H_Max&lt; Search_Model &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Novelty" prot="public" virt="non-virtual">aptk::agnostic::Novelty&lt; Search_Model, Search_Node &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Novelty__Partition" prot="public" virt="non-virtual">aptk::agnostic::Novelty_Partition&lt; Search_Model, Search_Node &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Novelty__Partition__2" prot="public" virt="non-virtual">aptk::agnostic::Novelty_Partition_2&lt; Search_Model, Search_Node &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Null__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::Null_Heuristic&lt; Search_Model &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::Unsat_Goals_Heuristic&lt; Search_Model &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Unsat__Goals__Mutexes__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::Unsat_Goals_Mutexes_Heuristic&lt; Search_Model &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1H1__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::H1_Heuristic&lt; Search_Model, aptk::agnostic::H_Add_Evaluation_Function &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1H1__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::H1_Heuristic&lt; Search_Model, aptk::agnostic::H_Max_Evaluation_Function &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1H1__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::H1_Heuristic&lt; Search_Model, H_Max_Evaluation_Function &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1H2__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::H2_Heuristic&lt; Search_Model, H2_Cost_Function::Zero_Costs &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Novelty" prot="public" virt="non-virtual">aptk::agnostic::Novelty&lt; Search_Model, aptk::search::brfs::Node&lt; aptk::State &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Novelty__Partition" prot="public" virt="non-virtual">aptk::agnostic::Novelty_Partition&lt; Search_Model, Node&lt; aptk::State &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic" prot="public" virt="non-virtual">aptk::agnostic::Relaxed_Plan_Heuristic&lt; Search_Model, aptk::agnostic::H1_Heuristic&lt; Search_Model, aptk::agnostic::H_Add_Evaluation_Function &gt; &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classaptk_1_1State" kindref="compound">State</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaptk_1_1Heuristic_1a8a256489e58bb9c540ba6ac32f304d63" prot="private" static="no" mutable="no">
        <type>const <ref refid="classaptk_1_1Search__Problem" kindref="compound">Search_Problem</ref>&lt; <ref refid="classaptk_1_1State" kindref="compound">State</ref> &gt; &amp;</type>
        <definition>const Search_Problem&lt;State&gt;&amp; aptk::Heuristic&lt; State &gt;::m_problem</definition>
        <argsstring></argsstring>
        <name>m_problem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" line="48" column="22" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1Heuristic_1a86eeb6445f46d830c14b319b7e5a2fda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aptk::Heuristic&lt; State &gt;::Heuristic</definition>
        <argsstring>(const Search_Problem&lt; State &gt; &amp;prob)</argsstring>
        <name>Heuristic</name>
        <param>
          <type>const <ref refid="classaptk_1_1Search__Problem" kindref="compound">Search_Problem</ref>&lt; <ref refid="classaptk_1_1State" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" line="34" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1Heuristic_1a2b0f4d681e5a565be755a3d2a8c30608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual aptk::Heuristic&lt; State &gt;::~Heuristic</definition>
        <argsstring>()</argsstring>
        <name>~Heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" line="38" column="9" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1Heuristic_1a13825fc30fc7f2d3f4ba5da0b4ee32f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::Heuristic&lt; State &gt;::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <reimplementedby refid="classaptk_1_1agnostic_1_1Novelty__Partition_1a583e5366946554f4545d3a7e5f1b8a21">init</reimplementedby>
        <reimplementedby refid="classaptk_1_1agnostic_1_1Novelty_1aa7f6ab0b38ab0c853056a2f5b5275dd9">init</reimplementedby>
        <reimplementedby refid="classaptk_1_1agnostic_1_1Novelty__Partition_1a583e5366946554f4545d3a7e5f1b8a21">init</reimplementedby>
        <reimplementedby refid="classaptk_1_1agnostic_1_1Novelty_1aa7f6ab0b38ab0c853056a2f5b5275dd9">init</reimplementedby>
        <reimplementedby refid="classaptk_1_1agnostic_1_1Novelty__Partition_1a583e5366946554f4545d3a7e5f1b8a21">init</reimplementedby>
        <reimplementedby refid="classaptk_1_1agnostic_1_1Novelty__Partition__2_1a48f747b526c395242488fe8eda5aa94a">init</reimplementedby>
        <reimplementedby refid="classaptk_1_1agnostic_1_1Novelty__Partition_1a583e5366946554f4545d3a7e5f1b8a21">init</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" line="41" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1Heuristic_1a95f567fe7f990819bfe72d08758b195e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::Heuristic&lt; State &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" line="42" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1Heuristic_1a44636224e625098eafd41fe54990b9d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classaptk_1_1Search__Problem" kindref="compound">Search_Problem</ref>&lt; <ref refid="classaptk_1_1State" kindref="compound">State</ref> &gt; &amp;</type>
        <definition>const Search_Problem&lt;State&gt;&amp; aptk::Heuristic&lt; State &gt;::problem</definition>
        <argsstring>() const</argsstring>
        <name>problem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" line="44" column="21" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" bodystart="44" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>aptk::agnostic::Novelty_Partition_2&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Novelty__Partition__2"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>aptk::agnostic::Null_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Null__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>aptk::agnostic::Novelty_Partition&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Novelty__Partition"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>H1_Heuristic&lt; Search_Model, H_Max_Evaluation_Function &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H1__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>H1_Heuristic&lt; Search_Model, aptk::agnostic::H_Add_Evaluation_Function &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H1__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>Novelty&lt; Search_Model, aptk::search::brfs::Node&lt; aptk::State &gt; &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Novelty"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>aptk::agnostic::Unsat_Goals_Mutexes_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Unsat__Goals__Mutexes__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
      <node id="5">
        <label>aptk::agnostic::Landmarks_Count_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Landmarks__Count__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>aptk::agnostic::Unsat_Goals_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Unsat__Goals__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>Novelty_Partition&lt; Search_Model, Node&lt; aptk::State &gt; &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Novelty__Partition"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>aptk::agnostic::H2_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H2__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>aptk::agnostic::H1_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H1__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>aptk::agnostic::Layered_H_Max&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Layered__H__Max"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>H2_Heuristic&lt; Search_Model, H2_Cost_Function::Zero_Costs &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H2__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>H1_Heuristic&lt; Search_Model, aptk::agnostic::H_Max_Evaluation_Function &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1H1__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>aptk::agnostic::Relaxed_Plan_Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>Relaxed_Plan_Heuristic&lt; Search_Model, aptk::agnostic::H1_Heuristic&lt; Search_Model, aptk::agnostic::H_Add_Evaluation_Function &gt; &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Relaxed__Plan__Heuristic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>aptk::agnostic::Novelty&lt; State &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1Novelty"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" line="30" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/heuristic.hxx" bodystart="30" bodyend="50"/>
    <listofallmembers>
      <member refid="classaptk_1_1Heuristic_1a86eeb6445f46d830c14b319b7e5a2fda" prot="public" virt="non-virtual"><scope>aptk::Heuristic</scope><name>Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a13825fc30fc7f2d3f4ba5da0b4ee32f7" prot="public" virt="virtual"><scope>aptk::Heuristic</scope><name>init</name></member>
      <member refid="classaptk_1_1Heuristic_1a8a256489e58bb9c540ba6ac32f304d63" prot="private" virt="non-virtual"><scope>aptk::Heuristic</scope><name>m_problem</name></member>
      <member refid="classaptk_1_1Heuristic_1a44636224e625098eafd41fe54990b9d1" prot="public" virt="non-virtual"><scope>aptk::Heuristic</scope><name>problem</name></member>
      <member refid="classaptk_1_1Heuristic_1a95f567fe7f990819bfe72d08758b195e" prot="public" virt="virtual"><scope>aptk::Heuristic</scope><name>reset</name></member>
      <member refid="classaptk_1_1Heuristic_1a2b0f4d681e5a565be755a3d2a8c30608" prot="public" virt="virtual"><scope>aptk::Heuristic</scope><name>~Heuristic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
