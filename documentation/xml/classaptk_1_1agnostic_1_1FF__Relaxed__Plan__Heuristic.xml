<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic" kind="class" language="C++" prot="public">
    <compoundname>aptk::agnostic::FF_Relaxed_Plan_Heuristic</compoundname>
    <basecompoundref refid="classaptk_1_1Heuristic" prot="public" virt="non-virtual">aptk::Heuristic&lt; State &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Search_Model</type>
      </param>
      <param>
        <type>typename Primary_Heuristic</type>
      </param>
      <param>
        <type>RP_Cost_Function</type>
        <declname>cost_opt</declname>
        <defname>cost_opt</defname>
        <defval>RP_Cost_Function::Use_Costs</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a72cfcc0964ee359dc6ba538fdbb3cdde" prot="protected" static="no" mutable="no">
        <type>Primary_Heuristic</type>
        <definition>Primary_Heuristic aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::m_base_heuristic</definition>
        <argsstring></argsstring>
        <name>m_base_heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="310" column="18" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a7249c25a20856414cd635f8011949380" prot="protected" static="no" mutable="no">
        <type><ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Extractor" kindref="compound">FF_Relaxed_Plan_Extractor</ref>&lt; Primary_Heuristic, cost_opt &gt;</type>
        <definition>FF_Relaxed_Plan_Extractor&lt; Primary_Heuristic, cost_opt &gt; aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::m_plan_extractor</definition>
        <argsstring></argsstring>
        <name>m_plan_extractor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="311" column="26" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1abaceb6ef70c827249c60cea1a0940b51" prot="protected" static="no" mutable="no">
        <type><ref refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Extractor" kindref="compound">FF_Relaxed_Plan_Extractor</ref>&lt; Primary_Heuristic, Cost_Type, cost_opt &gt;</type>
        <definition>FF_Relaxed_Plan_Extractor&lt; Primary_Heuristic, Cost_Type, cost_opt &gt; aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::m_plan_extractor</definition>
        <argsstring></argsstring>
        <name>m_plan_extractor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="403" column="26" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="403" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae361b056d13ed237ca85ec1247ddb5c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::FF_Relaxed_Plan_Heuristic</definition>
        <argsstring>(const Search_Model &amp;prob)</argsstring>
        <name>FF_Relaxed_Plan_Heuristic</name>
        <param>
          <type>const Search_Model &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="272" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="272" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae02b59563b7d18437b3a24ccb89ec862" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::~FF_Relaxed_Plan_Heuristic</definition>
        <argsstring>()</argsstring>
        <name>~FF_Relaxed_Plan_Heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="277" column="9" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ade6e0318b3d41dee3e45c9ff09bca82e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const Fluent_Vec &amp;s, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const Fluent_Vec &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="279" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a464a95b774784b8ab5f9db66d757eff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="283" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a2e1b51c0958168746a1224c634bacb12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="288" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a521ffd3c7ad65d900b99664b8bfa7f4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops, std::vector&lt; Action_Idx &gt; &amp;rel_plan)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>rel_plan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="292" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae18d4d04b537d9f3a659563695a11433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops, Fluent_Vec *goals)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>Fluent_Vec *</type>
          <declname>goals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="296" column="16" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a5335f640663737f34825220f28605174" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, float &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops, std::vector&lt; Action_Idx &gt; &amp;rel_plan, Fluent_Vec *goals)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>rel_plan</declname>
        </param>
        <param>
          <type>Fluent_Vec *</type>
          <declname>goals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="300" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="300" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aa9a332078a43aae66a7aba10189b5093" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::ignore_rp_h_value</definition>
        <argsstring>(bool b)</argsstring>
        <name>ignore_rp_h_value</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="304" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="304" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae8ec7cb462228da614ddf729673e7410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::set_one_HA_per_fluent</definition>
        <argsstring>(bool b)</argsstring>
        <name>set_one_HA_per_fluent</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="306" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae361b056d13ed237ca85ec1247ddb5c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::FF_Relaxed_Plan_Heuristic</definition>
        <argsstring>(const Search_Model &amp;prob)</argsstring>
        <name>FF_Relaxed_Plan_Heuristic</name>
        <param>
          <type>const Search_Model &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="349" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="349" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae02b59563b7d18437b3a24ccb89ec862" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::~FF_Relaxed_Plan_Heuristic</definition>
        <argsstring>()</argsstring>
        <name>~FF_Relaxed_Plan_Heuristic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="354" column="9" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a8153b67954cb30797450259da988c917" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, Cost_Type &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="357" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="357" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aca89d68cbebd4b2799ef64ff624514df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const Search_Node *n, Cost_Type &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1search_1_1gbfs__3h_1_1Node" kindref="compound">Search_Node</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="363" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a6d065e5cf94129b530b90cdfdfaa3bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const Fluent_Vec &amp;s, Cost_Type &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const Fluent_Vec &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="368" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="368" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ada6551307c82ae2261bafb7db80ca5bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_val)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="372" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a81a130b466dca7d506a6d3b0aa92e7b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="377" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aaf3fe1ad10d0bd777b62306cf59e6682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops, std::vector&lt; Action_Idx &gt; &amp;rel_plan)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>rel_plan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="381" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="381" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a9257259821de2e30038e1c35b5d3388f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops, Fluent_Vec *goals)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>Fluent_Vec *</type>
          <declname>goals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="385" column="16" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="385" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a0bf8ed199a768839608fca2534db2dfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::eval</definition>
        <argsstring>(const State &amp;s, Cost_Type &amp;h_val, std::vector&lt; Action_Idx &gt; &amp;pref_ops, std::vector&lt; Action_Idx &gt; &amp;rel_plan, Fluent_Vec *goals)</argsstring>
        <name>eval</name>
        <param>
          <type>const <ref refid="classaptk_1_1State" kindref="compound">State</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Cost_Type &amp;</type>
          <declname>h_val</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>pref_ops</declname>
        </param>
        <param>
          <type>std::vector&lt; Action_Idx &gt; &amp;</type>
          <declname>rel_plan</declname>
        </param>
        <param>
          <type>Fluent_Vec *</type>
          <declname>goals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="389" column="14" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aa9a332078a43aae66a7aba10189b5093" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::ignore_rp_h_value</definition>
        <argsstring>(bool b)</argsstring>
        <name>ignore_rp_h_value</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="393" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae8ec7cb462228da614ddf729673e7410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::set_one_HA_per_fluent</definition>
        <argsstring>(bool b)</argsstring>
        <name>set_one_HA_per_fluent</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="395" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="395" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a5d21714967f9c875ab8c2c500067c378" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::deletes_goal</definition>
        <argsstring>() const</argsstring>
        <name>deletes_goal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="397" column="6" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="397" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a9d1bdd49c9a95854a93813be0b68ea43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;::value</definition>
        <argsstring>(unsigned p)</argsstring>
        <name>value</name>
        <param>
          <type>unsigned</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" line="399" column="10" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/shared/compute/heuristic/ff_rp_heuristic.hxx" bodystart="399" bodyend="399"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
      <node id="1">
        <label>aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>aptk::agnostic::FF_Relaxed_Plan_Extractor&lt; Primary_Heuristic, RP_Cost_Function::Use_Costs &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Extractor"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_strips_model</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_rp_goals</edgelabel>
          <edgelabel>m_po_set</edgelabel>
          <edgelabel>m_rp_precs</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_init_fluents</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>aptk::STRIPS_Problem</label>
        <link refid="classaptk_1_1STRIPS__Problem"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_succ_gen</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_succ_gen_v3</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_mutexes</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_succ_gen_v2</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>aptk::agnostic::Match_Tree</label>
        <link refid="classaptk_1_1agnostic_1_1Match__Tree"/>
      </node>
      <node id="10">
        <label>aptk::Bit_Array</label>
        <link refid="classaptk_1_1Bit__Array"/>
      </node>
      <node id="9">
        <label>aptk::Bit_Set</label>
        <link refid="classaptk_1_1Bit__Set"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_fset</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>aptk::Heuristic&lt; State &gt;</label>
        <link refid="classaptk_1_1Heuristic"/>
      </node>
      <node id="6">
        <label>aptk::WatchedLitSuccGen</label>
        <link refid="classaptk_1_1WatchedLitSuccGen"/>
      </node>
      <node id="1">
        <label>aptk::agnostic::FF_Relaxed_Plan_Heuristic&lt; Search_Model, Primary_Heuristic, cost_opt &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_plan_extractor</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_plan_extractor</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>aptk::agnostic::Mutex_Set</label>
        <link refid="classaptk_1_1agnostic_1_1Mutex__Set"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_model</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>aptk::agnostic::Successor_Generator</label>
        <link refid="classaptk_1_1agnostic_1_1Successor__Generator"/>
      </node>
      <node id="3">
        <label>aptk::agnostic::FF_Relaxed_Plan_Extractor&lt; Primary_Heuristic, Cost_Type, RP_Cost_Function::Use_Costs &gt;</label>
        <link refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Extractor"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_strips_model</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_rp_goals</edgelabel>
          <edgelabel>m_po_set</edgelabel>
          <edgelabel>m_rp_precs</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_init_fluents</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" line="268" column="1" bodyfile="/home/simhasama/Github/LAPKT_dev/LAPKT-public/src/legacy_ff/generic-best_first-ffparser/ff_rp_heuristic.hxx" bodystart="269" bodyend="312"/>
    <listofallmembers>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a5d21714967f9c875ab8c2c500067c378" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>deletes_goal</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ade6e0318b3d41dee3e45c9ff09bca82e" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a464a95b774784b8ab5f9db66d757eff5" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a2e1b51c0958168746a1224c634bacb12" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a521ffd3c7ad65d900b99664b8bfa7f4e" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae18d4d04b537d9f3a659563695a11433" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a5335f640663737f34825220f28605174" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a8153b67954cb30797450259da988c917" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aca89d68cbebd4b2799ef64ff624514df" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a6d065e5cf94129b530b90cdfdfaa3bd2" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ada6551307c82ae2261bafb7db80ca5bf" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a81a130b466dca7d506a6d3b0aa92e7b2" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aaf3fe1ad10d0bd777b62306cf59e6682" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a9257259821de2e30038e1c35b5d3388f" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a0bf8ed199a768839608fca2534db2dfe" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>eval</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae361b056d13ed237ca85ec1247ddb5c3" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>FF_Relaxed_Plan_Heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae361b056d13ed237ca85ec1247ddb5c3" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>FF_Relaxed_Plan_Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a86eeb6445f46d830c14b319b7e5a2fda" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>Heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aa9a332078a43aae66a7aba10189b5093" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>ignore_rp_h_value</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1aa9a332078a43aae66a7aba10189b5093" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>ignore_rp_h_value</name></member>
      <member refid="classaptk_1_1Heuristic_1a13825fc30fc7f2d3f4ba5da0b4ee32f7" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>init</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a72cfcc0964ee359dc6ba538fdbb3cdde" prot="protected" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>m_base_heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a7249c25a20856414cd635f8011949380" prot="protected" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>m_plan_extractor</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1abaceb6ef70c827249c60cea1a0940b51" prot="protected" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>m_plan_extractor</name></member>
      <member refid="classaptk_1_1Heuristic_1a44636224e625098eafd41fe54990b9d1" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>problem</name></member>
      <member refid="classaptk_1_1Heuristic_1a95f567fe7f990819bfe72d08758b195e" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>reset</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae8ec7cb462228da614ddf729673e7410" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>set_one_HA_per_fluent</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae8ec7cb462228da614ddf729673e7410" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>set_one_HA_per_fluent</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1a9d1bdd49c9a95854a93813be0b68ea43" prot="public" virt="non-virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>value</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae02b59563b7d18437b3a24ccb89ec862" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>~FF_Relaxed_Plan_Heuristic</name></member>
      <member refid="classaptk_1_1agnostic_1_1FF__Relaxed__Plan__Heuristic_1ae02b59563b7d18437b3a24ccb89ec862" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>~FF_Relaxed_Plan_Heuristic</name></member>
      <member refid="classaptk_1_1Heuristic_1a2b0f4d681e5a565be755a3d2a8c30608" prot="public" virt="virtual"><scope>aptk::agnostic::FF_Relaxed_Plan_Heuristic</scope><name>~Heuristic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
